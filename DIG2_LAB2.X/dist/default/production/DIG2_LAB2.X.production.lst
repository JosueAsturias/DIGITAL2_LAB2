

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Feb 02 02:19:04 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.05
    22                           ; Generated 20/12/2018 GMT
    23                           ; 
    24                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367                           
   368                           	psect	idataBANK0
   369  01A6                     __pidataBANK0:	
   370                           
   371                           ;initializer for _numerosDisplay
   372  01A6  343F               	retlw	63
   373  01A7  3406               	retlw	6
   374  01A8  345B               	retlw	91
   375  01A9  344F               	retlw	79
   376  01AA  3466               	retlw	102
   377  01AB  346D               	retlw	109
   378  01AC  347D               	retlw	125
   379  01AD  3407               	retlw	7
   380  01AE  347F               	retlw	127
   381  01AF  346F               	retlw	111
   382  01B0  3477               	retlw	119
   383  01B1  347C               	retlw	124
   384  01B2  3439               	retlw	57
   385  01B3  345E               	retlw	94
   386  01B4  3479               	retlw	121
   387  01B5  3471               	retlw	113
   388  0007                     _PORTCbits	set	7
   389  0006                     _PORTBbits	set	6
   390  0008                     _PORTD	set	8
   391  0007                     _PORTC	set	7
   392  0006                     _PORTB	set	6
   393  0005                     _PORTA	set	5
   394  000B                     _INTCONbits	set	11
   395  008F                     _OSCCONbits	set	143
   396  0087                     _TRISCbits	set	135
   397  0096                     _IOCB	set	150
   398  0081                     _OPTION_REGbits	set	129
   399  0095                     _WPUB	set	149
   400  0086                     _TRISB	set	134
   401  0085                     _TRISA	set	133
   402  0087                     _TRISC	set	135
   403  0088                     _TRISD	set	136
   404  0189                     _ANSELH	set	393
   405  0188                     _ANSEL	set	392
   406                           
   407                           ; #config settings
   408  0000                     
   409                           	psect	cinit
   410  0011                     start_initialization:	
   411  0011                     __initialization:	
   412                           
   413                           ; Initialize objects allocated to BANK0
   414  0011  1383               	bcf	3,7	;select IRP bank0
   415  0012  3030               	movlw	low (__pdataBANK0+16)
   416  0013  00FD               	movwf	btemp+-1
   417  0014  3001               	movlw	high __pidataBANK0
   418  0015  00FE               	movwf	btemp
   419  0016  30A6               	movlw	low __pidataBANK0
   420  0017  00FF               	movwf	btemp+1
   421  0018  3020               	movlw	low __pdataBANK0
   422  0019  0084               	movwf	4
   423  001A  120A  118A  2199   	fcall	init_ram0
   424                           
   425                           ; Clear objects allocated to COMMON
   426  001D  01FA               	clrf	__pbssCOMMON& (0+127)
   427  001E  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   428  001F  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   429  0020  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
   430  0021                     end_of_initialization:	
   431                           ;End of C runtime variable initialization code
   432                           
   433  0021                     __end_of__initialization:	
   434  0021  0183               	clrf	3
   435  0022  120A  118A  295C   	ljmp	_main	;jump to C main() function
   436                           
   437                           	psect	bssCOMMON
   438  007A                     __pbssCOMMON:	
   439  007A                     _banderaTMR0:	
   440  007A                     	ds	1
   441  007B                     _banderaDO:	
   442  007B                     	ds	1
   443  007C                     _banderaUP:	
   444  007C                     	ds	1
   445  007D                     _banderaBoton:	
   446  007D                     	ds	1
   447                           
   448                           	psect	dataBANK0
   449  0020                     __pdataBANK0:	
   450  0020                     _numerosDisplay:	
   451  0020                     	ds	16
   452                           
   453                           	psect	inittext
   454  0195                     init_fetch0:	
   455                           ;	Called with low address in FSR and high address in W
   456                           
   457  0195  087E               	movf	126,w
   458  0196  008A               	movwf	10
   459  0197  087F               	movf	127,w
   460  0198  0082               	movwf	2
   461  0199                     init_ram0:	
   462                           ;Called with:
   463                           ;	high address of idata address in btemp 
   464                           ;	low address of idata address in btemp+1 
   465                           ;	low address of data in FSR
   466                           ;	high address + 1 of data in btemp-1
   467                           
   468  0199  2195  120A  118A   	fcall	init_fetch0
   469  019C  0080               	movwf	0
   470  019D  0A84               	incf	4,f
   471  019E  0804               	movf	4,w
   472  019F  067D               	xorwf	125,w
   473  01A0  1903               	btfsc	3,2
   474  01A1  3400               	retlw	0
   475  01A2  0AFF               	incf	127,f
   476  01A3  1903               	btfsc	3,2
   477  01A4  0AFE               	incf	126,f
   478  01A5  2999               	goto	init_ram0
   479                           
   480                           	psect	cstackCOMMON
   481  0070                     __pcstackCOMMON:	
   482  0070                     ?_cambioDisplay:	
   483  0070                     ?_config_PUERTOS:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ?_press_Subir:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ?_press_Bajar:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ?_ISR:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ?_main:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     cambioDisplay@valDec:	
   499                           ; 1 bytes @ 0x0
   500                           
   501                           
   502                           ; 1 bytes @ 0x0
   503  0070                     	ds	1
   504  0071                     cambioDisplay@bandera:	
   505                           
   506                           ; 1 bytes @ 0x1
   507  0071                     	ds	1
   508  0072                     ??_cambioDisplay:	
   509                           
   510                           ; 1 bytes @ 0x2
   511  0072                     	ds	2
   512  0074                     cambioDisplay@valUni:	
   513                           
   514                           ; 1 bytes @ 0x4
   515  0074                     	ds	1
   516  0075                     ??_ISR:	
   517                           
   518                           ; 1 bytes @ 0x5
   519  0075                     	ds	5
   520                           
   521                           	psect	cstackBANK0
   522  0030                     __pcstackBANK0:	
   523  0030                     ??_config_PUERTOS:	
   524  0030                     ?_config2Display:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0030                     ??_press_Subir:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0030                     ??_press_Bajar:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0030                     config2Display@FreqOsc:	
   534                           ; 1 bytes @ 0x0
   535                           
   536                           
   537                           ; 2 bytes @ 0x0
   538  0030                     	ds	2
   539  0032                     ??_config2Display:	
   540  0032                     ??_main:	
   541                           ; 1 bytes @ 0x2
   542                           
   543                           
   544                           	psect	maintext
   545  015C                     __pmaintext:	
   546                           ; 1 bytes @ 0x2
   547 ;;
   548 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   549 ;;
   550 ;; *************** function _main *****************
   551 ;; Defined at:
   552 ;;		line 68 in file "main.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;		None
   555 ;; Auto vars:     Size  Location     Type
   556 ;;		None
   557 ;; Return value:  Size  Location     Type
   558 ;;                  1    wreg      void 
   559 ;; Registers used:
   560 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   561 ;; Tracked objects:
   562 ;;		On entry : B00/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   566 ;;      Params:         0       0       0       0       0
   567 ;;      Locals:         0       0       0       0       0
   568 ;;      Temps:          0       0       0       0       0
   569 ;;      Totals:         0       0       0       0       0
   570 ;;Total ram usage:        0 bytes
   571 ;; Hardware stack levels required when called:    3
   572 ;; This function calls:
   573 ;;		_config2Display
   574 ;;		_config_PUERTOS
   575 ;;		_press_Bajar
   576 ;;		_press_Subir
   577 ;; This function is called by:
   578 ;;		Startup code after reset
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           
   583                           ;psect for function _main
   584  015C                     _main:	
   585                           
   586                           ;main.c: 69:     config_PUERTOS();
   587                           
   588                           ;incstack = 0
   589                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   590  015C  120A  118A  2179  120A  118A  	fcall	_config_PUERTOS
   591                           
   592                           ;main.c: 70:     config2Display(4000);
   593  0161  30A0               	movlw	160
   594  0162  1283               	bcf	3,5	;RP0=0, select bank0
   595  0163  1303               	bcf	3,6	;RP1=0, select bank0
   596  0164  00B0               	movwf	config2Display@FreqOsc
   597  0165  300F               	movlw	15
   598  0166  00B1               	movwf	config2Display@FreqOsc+1
   599  0167  120A  118A  2025  120A  118A  	fcall	_config2Display
   600                           
   601                           ;main.c: 71:     INTCONbits.GIE = 1;
   602  016C  178B               	bsf	11,7	;volatile
   603                           
   604                           ;main.c: 72:     INTCONbits.RBIF = 0;
   605  016D  100B               	bcf	11,0	;volatile
   606  016E                     l1193:	
   607                           
   608                           ;main.c: 75:         press_Subir();
   609  016E  120A  118A  20A6  120A  118A  	fcall	_press_Subir
   610                           
   611                           ;main.c: 76:         press_Bajar();
   612  0173  120A  118A  20D8  120A  118A  	fcall	_press_Bajar
   613  0178  296E               	goto	l1193
   614  0179                     __end_of_main:	
   615                           
   616                           	psect	text1
   617  00A6                     __ptext1:	
   618 ;; *************** function _press_Subir *****************
   619 ;; Defined at:
   620 ;;		line 101 in file "main.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;		None
   623 ;; Auto vars:     Size  Location     Type
   624 ;;		None
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      void 
   627 ;; Registers used:
   628 ;;		wreg, status,2, status,0
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   634 ;;      Params:         0       0       0       0       0
   635 ;;      Locals:         0       0       0       0       0
   636 ;;      Temps:          0       2       0       0       0
   637 ;;      Totals:         0       2       0       0       0
   638 ;;Total ram usage:        2 bytes
   639 ;; Hardware stack levels used:    1
   640 ;; Hardware stack levels required when called:    2
   641 ;; This function calls:
   642 ;;		Nothing
   643 ;; This function is called by:
   644 ;;		_main
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           
   649                           ;psect for function _press_Subir
   650  00A6                     _press_Subir:	
   651                           
   652                           ;main.c: 102:     if (banderaBoton == 1){
   653                           
   654                           ;incstack = 0
   655                           ; Regs used in _press_Subir: [wreg+status,2+status,0]
   656  00A6  037D               	decf	_banderaBoton,w
   657  00A7  1D03               	btfss	3,2
   658  00A8  28C4               	goto	l1137
   659                           
   660                           ;main.c: 103:         if (banderaUP == 0){
   661  00A9  087C               	movf	_banderaUP,w
   662  00AA  1D03               	btfss	3,2
   663  00AB  28C4               	goto	l1137
   664                           
   665                           ;main.c: 104:             if (PORTBbits.RB0 == 0){
   666  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   667  00AD  1303               	bcf	3,6	;RP1=0, select bank0
   668  00AE  1806               	btfsc	6,0	;volatile
   669  00AF  28C4               	goto	l1137
   670                           
   671                           ;main.c: 105:                 _delay((unsigned long)((69)*(4000000/4000.0)));
   672  00B0  305A               	movlw	90
   673  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   674  00B2  1303               	bcf	3,6	;RP1=0, select bank0
   675  00B3  00B1               	movwf	??_press_Subir+1
   676  00B4  309A               	movlw	154
   677  00B5  00B0               	movwf	??_press_Subir
   678  00B6                     u277:	
   679  00B6  0BB0               	decfsz	??_press_Subir,f
   680  00B7  28B6               	goto	u277
   681  00B8  0BB1               	decfsz	??_press_Subir+1,f
   682  00B9  28B6               	goto	u277
   683  00BA  0000               	nop
   684                           
   685                           ;main.c: 106:                 PORTA = PORTA + 1;
   686  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   687  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   688  00BD  0805               	movf	5,w	;volatile
   689  00BE  3E01               	addlw	1
   690  00BF  0085               	movwf	5	;volatile
   691                           
   692                           ;main.c: 107:                 banderaBoton = 0;
   693  00C0  01FD               	clrf	_banderaBoton
   694                           
   695                           ;main.c: 108:                 banderaUP = 1;
   696  00C1  01FC               	clrf	_banderaUP
   697  00C2  0AFC               	incf	_banderaUP,f
   698                           
   699                           ;main.c: 109:                 INTCONbits.RBIE = 1;
   700  00C3  158B               	bsf	11,3	;volatile
   701  00C4                     l1137:	
   702                           
   703                           ;main.c: 113:     if (banderaUP == 1){
   704  00C4  037C               	decf	_banderaUP,w
   705  00C5  1D03               	btfss	3,2
   706  00C6  0008               	return
   707                           
   708                           ;main.c: 114:         if (PORTBbits.RB0 == 1){
   709  00C7  1283               	bcf	3,5	;RP0=0, select bank0
   710  00C8  1303               	bcf	3,6	;RP1=0, select bank0
   711  00C9  1C06               	btfss	6,0	;volatile
   712  00CA  0008               	return
   713                           
   714                           ;main.c: 115:         _delay((unsigned long)((69)*(4000000/4000.0)));
   715  00CB  305A               	movlw	90
   716  00CC  1283               	bcf	3,5	;RP0=0, select bank0
   717  00CD  1303               	bcf	3,6	;RP1=0, select bank0
   718  00CE  00B1               	movwf	??_press_Subir+1
   719  00CF  309A               	movlw	154
   720  00D0  00B0               	movwf	??_press_Subir
   721  00D1                     u287:	
   722  00D1  0BB0               	decfsz	??_press_Subir,f
   723  00D2  28D1               	goto	u287
   724  00D3  0BB1               	decfsz	??_press_Subir+1,f
   725  00D4  28D1               	goto	u287
   726  00D5  0000               	nop
   727                           
   728                           ;main.c: 116:         banderaUP = 0;
   729  00D6  01FC               	clrf	_banderaUP
   730  00D7  0008               	return
   731  00D8                     __end_of_press_Subir:	
   732                           
   733                           	psect	text2
   734  00D8                     __ptext2:	
   735 ;; *************** function _press_Bajar *****************
   736 ;; Defined at:
   737 ;;		line 120 in file "main.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;		None
   740 ;; Auto vars:     Size  Location     Type
   741 ;;		None
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		wreg, status,2, status,0
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   751 ;;      Params:         0       0       0       0       0
   752 ;;      Locals:         0       0       0       0       0
   753 ;;      Temps:          0       2       0       0       0
   754 ;;      Totals:         0       2       0       0       0
   755 ;;Total ram usage:        2 bytes
   756 ;; Hardware stack levels used:    1
   757 ;; Hardware stack levels required when called:    2
   758 ;; This function calls:
   759 ;;		Nothing
   760 ;; This function is called by:
   761 ;;		_main
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           
   766                           ;psect for function _press_Bajar
   767  00D8                     _press_Bajar:	
   768                           
   769                           ;main.c: 121:     if (banderaBoton == 1){
   770                           
   771                           ;incstack = 0
   772                           ; Regs used in _press_Bajar: [wreg+status,2+status,0]
   773  00D8  037D               	decf	_banderaBoton,w
   774  00D9  1D03               	btfss	3,2
   775  00DA  28F6               	goto	l1161
   776                           
   777                           ;main.c: 122:         if (banderaDO == 0){
   778  00DB  087B               	movf	_banderaDO,w
   779  00DC  1D03               	btfss	3,2
   780  00DD  28F6               	goto	l1161
   781                           
   782                           ;main.c: 123:             if (PORTBbits.RB2 == 0){
   783  00DE  1283               	bcf	3,5	;RP0=0, select bank0
   784  00DF  1303               	bcf	3,6	;RP1=0, select bank0
   785  00E0  1906               	btfsc	6,2	;volatile
   786  00E1  28F6               	goto	l1161
   787                           
   788                           ;main.c: 124:                 _delay((unsigned long)((69)*(4000000/4000.0)));
   789  00E2  305A               	movlw	90
   790  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   791  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   792  00E5  00B1               	movwf	??_press_Bajar+1
   793  00E6  309A               	movlw	154
   794  00E7  00B0               	movwf	??_press_Bajar
   795  00E8                     u297:	
   796  00E8  0BB0               	decfsz	??_press_Bajar,f
   797  00E9  28E8               	goto	u297
   798  00EA  0BB1               	decfsz	??_press_Bajar+1,f
   799  00EB  28E8               	goto	u297
   800  00EC  0000               	nop
   801                           
   802                           ;main.c: 125:                 PORTA = PORTA - 1;
   803  00ED  1283               	bcf	3,5	;RP0=0, select bank0
   804  00EE  1303               	bcf	3,6	;RP1=0, select bank0
   805  00EF  0805               	movf	5,w	;volatile
   806  00F0  3EFF               	addlw	255
   807  00F1  0085               	movwf	5	;volatile
   808                           
   809                           ;main.c: 126:                 banderaBoton = 0;
   810  00F2  01FD               	clrf	_banderaBoton
   811                           
   812                           ;main.c: 127:                 banderaDO = 1;
   813  00F3  01FB               	clrf	_banderaDO
   814  00F4  0AFB               	incf	_banderaDO,f
   815                           
   816                           ;main.c: 128:                 INTCONbits.RBIE = 1;
   817  00F5  158B               	bsf	11,3	;volatile
   818  00F6                     l1161:	
   819                           
   820                           ;main.c: 132:     if (banderaDO == 1){
   821  00F6  037B               	decf	_banderaDO,w
   822  00F7  1D03               	btfss	3,2
   823  00F8  0008               	return
   824                           
   825                           ;main.c: 133:         if (PORTBbits.RB2 == 1){
   826  00F9  1283               	bcf	3,5	;RP0=0, select bank0
   827  00FA  1303               	bcf	3,6	;RP1=0, select bank0
   828  00FB  1D06               	btfss	6,2	;volatile
   829  00FC  0008               	return
   830                           
   831                           ;main.c: 134:         _delay((unsigned long)((69)*(4000000/4000.0)));
   832  00FD  305A               	movlw	90
   833  00FE  1283               	bcf	3,5	;RP0=0, select bank0
   834  00FF  1303               	bcf	3,6	;RP1=0, select bank0
   835  0100  00B1               	movwf	??_press_Bajar+1
   836  0101  309A               	movlw	154
   837  0102  00B0               	movwf	??_press_Bajar
   838  0103                     u307:	
   839  0103  0BB0               	decfsz	??_press_Bajar,f
   840  0104  2903               	goto	u307
   841  0105  0BB1               	decfsz	??_press_Bajar+1,f
   842  0106  2903               	goto	u307
   843  0107  0000               	nop
   844                           
   845                           ;main.c: 135:         banderaDO = 0;
   846  0108  01FB               	clrf	_banderaDO
   847  0109  0008               	return
   848  010A                     __end_of_press_Bajar:	
   849                           
   850                           	psect	text3
   851  0179                     __ptext3:	
   852 ;; *************** function _config_PUERTOS *****************
   853 ;; Defined at:
   854 ;;		line 81 in file "main.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;		None
   857 ;; Auto vars:     Size  Location     Type
   858 ;;		None
   859 ;; Return value:  Size  Location     Type
   860 ;;                  1    wreg      void 
   861 ;; Registers used:
   862 ;;		wreg, status,2
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   868 ;;      Params:         0       0       0       0       0
   869 ;;      Locals:         0       0       0       0       0
   870 ;;      Temps:          0       0       0       0       0
   871 ;;      Totals:         0       0       0       0       0
   872 ;;Total ram usage:        0 bytes
   873 ;; Hardware stack levels used:    1
   874 ;; Hardware stack levels required when called:    2
   875 ;; This function calls:
   876 ;;		Nothing
   877 ;; This function is called by:
   878 ;;		_main
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           
   883                           ;psect for function _config_PUERTOS
   884  0179                     _config_PUERTOS:	
   885                           
   886                           ;main.c: 83:     TRISD = 255;
   887                           
   888                           ;incstack = 0
   889                           ; Regs used in _config_PUERTOS: [wreg+status,2]
   890  0179  30FF               	movlw	255
   891  017A  1683               	bsf	3,5	;RP0=1, select bank1
   892  017B  1303               	bcf	3,6	;RP1=0, select bank1
   893  017C  0088               	movwf	8	;volatile
   894                           
   895                           ;main.c: 84:     TRISC = 255;
   896  017D  30FF               	movlw	255
   897  017E  0087               	movwf	7	;volatile
   898                           
   899                           ;main.c: 85:     TRISA = 0;
   900  017F  0185               	clrf	5	;volatile
   901                           
   902                           ;main.c: 86:     TRISB = 0b00000101;
   903  0180  3005               	movlw	5
   904  0181  0086               	movwf	6	;volatile
   905                           
   906                           ;main.c: 87:     PORTA = 0;
   907  0182  1283               	bcf	3,5	;RP0=0, select bank0
   908  0183  1303               	bcf	3,6	;RP1=0, select bank0
   909  0184  0185               	clrf	5	;volatile
   910                           
   911                           ;main.c: 88:     PORTB = 0;
   912  0185  0186               	clrf	6	;volatile
   913                           
   914                           ;main.c: 89:     PORTC = 0;
   915  0186  0187               	clrf	7	;volatile
   916                           
   917                           ;main.c: 90:     PORTD = 0;
   918  0187  0188               	clrf	8	;volatile
   919                           
   920                           ;main.c: 91:     ANSEL = 0;
   921  0188  1683               	bsf	3,5	;RP0=1, select bank3
   922  0189  1703               	bsf	3,6	;RP1=1, select bank3
   923  018A  0188               	clrf	8	;volatile
   924                           
   925                           ;main.c: 92:     ANSELH = 0;
   926  018B  0189               	clrf	9	;volatile
   927                           
   928                           ;main.c: 93:     WPUB = 0b00000101;
   929  018C  3005               	movlw	5
   930  018D  1683               	bsf	3,5	;RP0=1, select bank1
   931  018E  1303               	bcf	3,6	;RP1=0, select bank1
   932  018F  0095               	movwf	21	;volatile
   933                           
   934                           ;main.c: 94:     OPTION_REGbits.nRBPU = 0;
   935  0190  1381               	bcf	1,7	;volatile
   936                           
   937                           ;main.c: 97:     IOCB = 0b00000101;;
   938  0191  3005               	movlw	5
   939  0192  0096               	movwf	22	;volatile
   940                           
   941                           ;main.c: 98:     INTCONbits.RBIE = 1;
   942  0193  158B               	bsf	11,3	;volatile
   943  0194  0008               	return
   944  0195                     __end_of_config_PUERTOS:	
   945                           
   946                           	psect	text4
   947  0025                     __ptext4:	
   948 ;; *************** function _config2Display *****************
   949 ;; Defined at:
   950 ;;		line 15 in file "Display_7.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;  FreqOsc         2    0[BANK0 ] unsigned int 
   953 ;; Auto vars:     Size  Location     Type
   954 ;;		None
   955 ;; Return value:  Size  Location     Type
   956 ;;                  1    wreg      void 
   957 ;; Registers used:
   958 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   964 ;;      Params:         0       2       0       0       0
   965 ;;      Locals:         0       0       0       0       0
   966 ;;      Temps:          0       0       0       0       0
   967 ;;      Totals:         0       2       0       0       0
   968 ;;Total ram usage:        2 bytes
   969 ;; Hardware stack levels used:    1
   970 ;; Hardware stack levels required when called:    2
   971 ;; This function calls:
   972 ;;		Nothing
   973 ;; This function is called by:
   974 ;;		_main
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           
   979                           ;psect for function _config2Display
   980  0025                     _config2Display:	
   981                           
   982                           ;Display_7.c: 16:     TRISD = 0;
   983                           
   984                           ;incstack = 0
   985                           ; Regs used in _config2Display: [wreg-fsr0h+status,2+status,0]
   986  0025  1683               	bsf	3,5	;RP0=1, select bank1
   987  0026  1303               	bcf	3,6	;RP1=0, select bank1
   988  0027  0188               	clrf	8	;volatile
   989                           
   990                           ;Display_7.c: 17:     PORTD = 0;
   991  0028  1283               	bcf	3,5	;RP0=0, select bank0
   992  0029  1303               	bcf	3,6	;RP1=0, select bank0
   993  002A  0188               	clrf	8	;volatile
   994                           
   995                           ;Display_7.c: 18:     TRISCbits.TRISC2 = 0;
   996  002B  1683               	bsf	3,5	;RP0=1, select bank1
   997  002C  1303               	bcf	3,6	;RP1=0, select bank1
   998  002D  1107               	bcf	7,2	;volatile
   999                           
  1000                           ;Display_7.c: 19:     TRISCbits.TRISC0 = 0;
  1001  002E  1007               	bcf	7,0	;volatile
  1002                           
  1003                           ;Display_7.c: 20:     PORTCbits.RC2 = 0;
  1004  002F  1283               	bcf	3,5	;RP0=0, select bank0
  1005  0030  1303               	bcf	3,6	;RP1=0, select bank0
  1006  0031  1107               	bcf	7,2	;volatile
  1007                           
  1008                           ;Display_7.c: 21:     PORTCbits.RC0 =0;
  1009  0032  1007               	bcf	7,0	;volatile
  1010                           
  1011                           ;Display_7.c: 24:     switch (FreqOsc){
  1012  0033  2864               	goto	l1089
  1013  0034                     l1071:	
  1014                           
  1015                           ;Display_7.c: 26:             OSCCONbits.IRCF = 0b000;
  1016  0034  308F               	movlw	-113
  1017  0035  1683               	bsf	3,5	;RP0=1, select bank1
  1018  0036  1303               	bcf	3,6	;RP1=0, select bank1
  1019  0037  058F               	andwf	15,f	;volatile
  1020                           
  1021                           ;Display_7.c: 27:             break;
  1022  0038  289C               	goto	l108
  1023  0039                     l1073:	
  1024                           
  1025                           ;Display_7.c: 29:             OSCCONbits.IRCF = 0b001;
  1026  0039  1683               	bsf	3,5	;RP0=1, select bank1
  1027  003A  1303               	bcf	3,6	;RP1=0, select bank1
  1028  003B  080F               	movf	15,w	;volatile
  1029  003C  398F               	andlw	-113
  1030  003D  3810               	iorlw	16
  1031  003E  2862               	goto	L6
  1032  003F                     l1075:	
  1033                           ;Display_7.c: 30:             break;
  1034                           
  1035                           
  1036                           ;Display_7.c: 32:             OSCCONbits.IRCF = 0b010;
  1037  003F  1683               	bsf	3,5	;RP0=1, select bank1
  1038  0040  1303               	bcf	3,6	;RP1=0, select bank1
  1039  0041  080F               	movf	15,w	;volatile
  1040  0042  398F               	andlw	-113
  1041  0043  3820               	iorlw	32
  1042  0044  2862               	goto	L6
  1043  0045                     l1077:	
  1044                           ;Display_7.c: 33:             break;
  1045                           
  1046                           
  1047                           ;Display_7.c: 35:             OSCCONbits.IRCF = 0b011;
  1048  0045  1683               	bsf	3,5	;RP0=1, select bank1
  1049  0046  1303               	bcf	3,6	;RP1=0, select bank1
  1050  0047  080F               	movf	15,w	;volatile
  1051  0048  398F               	andlw	-113
  1052  0049  3830               	iorlw	48
  1053  004A  2862               	goto	L6
  1054  004B                     l1079:	
  1055                           ;Display_7.c: 36:             break;
  1056                           
  1057                           
  1058                           ;Display_7.c: 38:             OSCCONbits.IRCF = 0b100;
  1059  004B  1683               	bsf	3,5	;RP0=1, select bank1
  1060  004C  1303               	bcf	3,6	;RP1=0, select bank1
  1061  004D  080F               	movf	15,w	;volatile
  1062  004E  398F               	andlw	-113
  1063  004F  3840               	iorlw	64
  1064  0050  2862               	goto	L6
  1065  0051                     l1081:	
  1066                           ;Display_7.c: 39:             break;
  1067                           
  1068                           
  1069                           ;Display_7.c: 41:             OSCCONbits.IRCF = 0b101;
  1070  0051  1683               	bsf	3,5	;RP0=1, select bank1
  1071  0052  1303               	bcf	3,6	;RP1=0, select bank1
  1072  0053  080F               	movf	15,w	;volatile
  1073  0054  398F               	andlw	-113
  1074  0055  3850               	iorlw	80
  1075  0056  2862               	goto	L6
  1076  0057                     l1083:	
  1077                           ;Display_7.c: 42:             break;
  1078                           
  1079  0057  285D               	goto	l1087
  1080  0058                     l1085:	
  1081                           ;Display_7.c: 45:             break;
  1082                           
  1083                           ;Display_7.c: 44:             OSCCONbits.IRCF = 0b110;
  1084                           
  1085                           
  1086                           ;Display_7.c: 47:             OSCCONbits.IRCF = 0b111;
  1087  0058  3070               	movlw	112
  1088  0059  1683               	bsf	3,5	;RP0=1, select bank1
  1089  005A  1303               	bcf	3,6	;RP1=0, select bank1
  1090  005B  048F               	iorwf	15,f	;volatile
  1091                           
  1092                           ;Display_7.c: 48:             break;
  1093  005C  289C               	goto	l108
  1094  005D                     l1087:	
  1095                           
  1096                           ;Display_7.c: 50:             OSCCONbits.IRCF = 0b110;
  1097  005D  1683               	bsf	3,5	;RP0=1, select bank1
  1098  005E  1303               	bcf	3,6	;RP1=0, select bank1
  1099  005F  080F               	movf	15,w	;volatile
  1100  0060  398F               	andlw	-113
  1101  0061  3860               	iorlw	96
  1102  0062                     L6:	
  1103  0062  008F               	movwf	15	;volatile
  1104                           
  1105                           ;Display_7.c: 51:     }
  1106  0063  289C               	goto	l108
  1107  0064                     l1089:	
  1108                           
  1109                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 6 sub-sw
      +                          itches
  1110                           ; Switch size 1, requested type "simple"
  1111                           ; Number of cases is 6, Range of values is 0 to 31
  1112                           ; switch strategies available:
  1113                           ; Name         Instructions Cycles
  1114                           ; simple_byte           19    10 (average)
  1115                           ; direct_byte          104     8 (fixed)
  1116                           ; jumptable            260     6 (fixed)
  1117                           ;	Chosen strategy is simple_byte
  1118  0064  0831               	movf	config2Display@FreqOsc+1,w
  1119  0065  3A00               	xorlw	0	; case 0
  1120  0066  1903               	skipnz
  1121  0067  2878               	goto	l1337
  1122  0068  3A01               	xorlw	1	; case 1
  1123  0069  1903               	skipnz
  1124  006A  2883               	goto	l1339
  1125  006B  3A02               	xorlw	2	; case 3
  1126  006C  1903               	skipnz
  1127  006D  2888               	goto	l1341
  1128  006E  3A04               	xorlw	4	; case 7
  1129  006F  1903               	skipnz
  1130  0070  288D               	goto	l1343
  1131  0071  3A08               	xorlw	8	; case 15
  1132  0072  1903               	skipnz
  1133  0073  2892               	goto	l1345
  1134  0074  3A10               	xorlw	16	; case 31
  1135  0075  1903               	skipnz
  1136  0076  2897               	goto	l1347
  1137  0077  285D               	goto	l1087
  1138  0078                     l1337:	
  1139                           
  1140                           ; Switch size 1, requested type "simple"
  1141                           ; Number of cases is 3, Range of values is 31 to 250
  1142                           ; switch strategies available:
  1143                           ; Name         Instructions Cycles
  1144                           ; simple_byte           10     6 (average)
  1145                           ; jumptable            263     9 (fixed)
  1146                           ;	Chosen strategy is simple_byte
  1147  0078  0830               	movf	config2Display@FreqOsc,w
  1148  0079  3A1F               	xorlw	31	; case 31
  1149  007A  1903               	skipnz
  1150  007B  2834               	goto	l1071
  1151  007C  3A62               	xorlw	98	; case 125
  1152  007D  1903               	skipnz
  1153  007E  2839               	goto	l1073
  1154  007F  3A87               	xorlw	135	; case 250
  1155  0080  1903               	skipnz
  1156  0081  283F               	goto	l1075
  1157  0082  285D               	goto	l1087
  1158  0083                     l1339:	
  1159                           
  1160                           ; Switch size 1, requested type "simple"
  1161                           ; Number of cases is 1, Range of values is 244 to 244
  1162                           ; switch strategies available:
  1163                           ; Name         Instructions Cycles
  1164                           ; simple_byte            4     3 (average)
  1165                           ; direct_byte           14    11 (fixed)
  1166                           ; jumptable            263     9 (fixed)
  1167                           ;	Chosen strategy is simple_byte
  1168  0083  0830               	movf	config2Display@FreqOsc,w
  1169  0084  3AF4               	xorlw	244	; case 244
  1170  0085  1903               	skipnz
  1171  0086  2845               	goto	l1077
  1172  0087  285D               	goto	l1087
  1173  0088                     l1341:	
  1174                           
  1175                           ; Switch size 1, requested type "simple"
  1176                           ; Number of cases is 1, Range of values is 232 to 232
  1177                           ; switch strategies available:
  1178                           ; Name         Instructions Cycles
  1179                           ; simple_byte            4     3 (average)
  1180                           ; direct_byte           14    11 (fixed)
  1181                           ; jumptable            263     9 (fixed)
  1182                           ;	Chosen strategy is simple_byte
  1183  0088  0830               	movf	config2Display@FreqOsc,w
  1184  0089  3AE8               	xorlw	232	; case 232
  1185  008A  1903               	skipnz
  1186  008B  284B               	goto	l1079
  1187  008C  285D               	goto	l1087
  1188  008D                     l1343:	
  1189                           
  1190                           ; Switch size 1, requested type "simple"
  1191                           ; Number of cases is 1, Range of values is 208 to 208
  1192                           ; switch strategies available:
  1193                           ; Name         Instructions Cycles
  1194                           ; simple_byte            4     3 (average)
  1195                           ; direct_byte           14    11 (fixed)
  1196                           ; jumptable            263     9 (fixed)
  1197                           ;	Chosen strategy is simple_byte
  1198  008D  0830               	movf	config2Display@FreqOsc,w
  1199  008E  3AD0               	xorlw	208	; case 208
  1200  008F  1903               	skipnz
  1201  0090  2851               	goto	l1081
  1202  0091  285D               	goto	l1087
  1203  0092                     l1345:	
  1204                           
  1205                           ; Switch size 1, requested type "simple"
  1206                           ; Number of cases is 1, Range of values is 160 to 160
  1207                           ; switch strategies available:
  1208                           ; Name         Instructions Cycles
  1209                           ; simple_byte            4     3 (average)
  1210                           ; direct_byte           14    11 (fixed)
  1211                           ; jumptable            263     9 (fixed)
  1212                           ;	Chosen strategy is simple_byte
  1213  0092  0830               	movf	config2Display@FreqOsc,w
  1214  0093  3AA0               	xorlw	160	; case 160
  1215  0094  1903               	skipnz
  1216  0095  2857               	goto	l1083
  1217  0096  285D               	goto	l1087
  1218  0097                     l1347:	
  1219                           
  1220                           ; Switch size 1, requested type "simple"
  1221                           ; Number of cases is 1, Range of values is 64 to 64
  1222                           ; switch strategies available:
  1223                           ; Name         Instructions Cycles
  1224                           ; simple_byte            4     3 (average)
  1225                           ; direct_byte           14    11 (fixed)
  1226                           ; jumptable            263     9 (fixed)
  1227                           ;	Chosen strategy is simple_byte
  1228  0097  0830               	movf	config2Display@FreqOsc,w
  1229  0098  3A40               	xorlw	64	; case 64
  1230  0099  1903               	skipnz
  1231  009A  2858               	goto	l1085
  1232  009B  285D               	goto	l1087
  1233  009C                     l108:	
  1234                           
  1235                           ;Display_7.c: 53:     OPTION_REGbits.T0CS = 0;
  1236  009C  1281               	bcf	1,5	;volatile
  1237                           
  1238                           ;Display_7.c: 54:     OPTION_REGbits.T0SE = 0;
  1239  009D  1201               	bcf	1,4	;volatile
  1240                           
  1241                           ;Display_7.c: 55:     OPTION_REGbits.PSA = 0;
  1242  009E  1181               	bcf	1,3	;volatile
  1243                           
  1244                           ;Display_7.c: 56:     OPTION_REGbits.PS = 0b010;
  1245  009F  0801               	movf	1,w	;volatile
  1246  00A0  39F8               	andlw	-8
  1247  00A1  3802               	iorlw	2
  1248  00A2  0081               	movwf	1	;volatile
  1249                           
  1250                           ;Display_7.c: 57:     INTCONbits.T0IF = 0;
  1251  00A3  110B               	bcf	11,2	;volatile
  1252                           
  1253                           ;Display_7.c: 58:     INTCONbits.T0IE = 1;
  1254  00A4  168B               	bsf	11,5	;volatile
  1255  00A5  0008               	return
  1256  00A6                     __end_of_config2Display:	
  1257                           
  1258                           	psect	text5
  1259  0138                     __ptext5:	
  1260 ;; *************** function _ISR *****************
  1261 ;; Defined at:
  1262 ;;		line 50 in file "main.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;		None
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;		None
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  1    wreg      void 
  1269 ;; Registers used:
  1270 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1276 ;;      Params:         0       0       0       0       0
  1277 ;;      Locals:         0       0       0       0       0
  1278 ;;      Temps:          5       0       0       0       0
  1279 ;;      Totals:         5       0       0       0       0
  1280 ;;Total ram usage:        5 bytes
  1281 ;; Hardware stack levels used:    1
  1282 ;; Hardware stack levels required when called:    1
  1283 ;; This function calls:
  1284 ;;		_cambioDisplay
  1285 ;; This function is called by:
  1286 ;;		Interrupt level 1
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           
  1291                           ;psect for function _ISR
  1292  0138                     _ISR:	
  1293                           
  1294                           ;main.c: 52:     if (INTCONbits.RBIF == 1){
  1295  0138  1C0B               	btfss	11,0	;volatile
  1296  0139  2941               	goto	i1l57
  1297                           
  1298                           ;main.c: 53:         INTCONbits.RBIF = 0;
  1299  013A  100B               	bcf	11,0	;volatile
  1300                           
  1301                           ;main.c: 54:         if (banderaBoton == 0){
  1302  013B  087D               	movf	_banderaBoton,w
  1303  013C  1D03               	btfss	3,2
  1304  013D  2941               	goto	i1l57
  1305                           
  1306                           ;main.c: 55:             banderaBoton = 1;
  1307  013E  01FD               	clrf	_banderaBoton
  1308  013F  0AFD               	incf	_banderaBoton,f
  1309                           
  1310                           ;main.c: 56:             INTCONbits.RBIE = 0;
  1311  0140  118B               	bcf	11,3	;volatile
  1312  0141                     i1l57:	
  1313                           ;main.c: 58:     }
  1314                           
  1315                           
  1316                           ;main.c: 60:     if (INTCONbits.T0IF == 1){
  1317  0141  1D0B               	btfss	11,2	;volatile
  1318  0142  2953               	goto	i1l60
  1319                           
  1320                           ;main.c: 61:         banderaTMR0 = ~banderaTMR0;
  1321  0143  09FA               	comf	_banderaTMR0,f
  1322                           
  1323                           ;main.c: 62:         cambioDisplay(9, 6, banderaTMR0);
  1324  0144  3006               	movlw	6
  1325  0145  00F5               	movwf	??_ISR
  1326  0146  0875               	movf	??_ISR,w
  1327  0147  00F0               	movwf	cambioDisplay@valDec
  1328  0148  087A               	movf	_banderaTMR0,w
  1329  0149  00F6               	movwf	??_ISR+1
  1330  014A  0876               	movf	??_ISR+1,w
  1331  014B  00F1               	movwf	cambioDisplay@bandera
  1332  014C  3009               	movlw	9
  1333  014D  120A  118A  210A  120A  118A  	fcall	_cambioDisplay
  1334                           
  1335                           ;main.c: 63:         INTCONbits.T0IF = 0;
  1336  0152  110B               	bcf	11,2	;volatile
  1337  0153                     i1l60:	
  1338  0153  0879               	movf	??_ISR+4,w
  1339  0154  008A               	movwf	10
  1340  0155  0878               	movf	??_ISR+3,w
  1341  0156  0084               	movwf	4
  1342  0157  0E77               	swapf	(??_ISR+2)^(0+4294967168),w
  1343  0158  0083               	movwf	3
  1344  0159  0EFE               	swapf	126,f
  1345  015A  0E7E               	swapf	126,w
  1346  015B  0009               	retfie
  1347  015C                     __end_of_ISR:	
  1348                           
  1349                           	psect	intentry
  1350  0004                     __pintentry:	
  1351                           ;incstack = 0
  1352                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1353                           
  1354  0004                     interrupt_function:	
  1355  007E                     saved_w	set	btemp
  1356  0004  00FE               	movwf	btemp
  1357  0005  0E03               	swapf	3,w
  1358  0006  00F7               	movwf	??_ISR+2
  1359  0007  0804               	movf	4,w
  1360  0008  00F8               	movwf	??_ISR+3
  1361  0009  080A               	movf	10,w
  1362  000A  00F9               	movwf	??_ISR+4
  1363  000B  120A  118A  2938   	ljmp	_ISR
  1364                           
  1365                           	psect	text6
  1366  010A                     __ptext6:	
  1367 ;; *************** function _cambioDisplay *****************
  1368 ;; Defined at:
  1369 ;;		line 63 in file "Display_7.c"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;  valUni          1    wreg     unsigned char 
  1372 ;;  valDec          1    0[COMMON] unsigned char 
  1373 ;;  bandera         1    1[COMMON] unsigned char 
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;  valUni          1    4[COMMON] unsigned char 
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      void 
  1378 ;; Registers used:
  1379 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1385 ;;      Params:         2       0       0       0       0
  1386 ;;      Locals:         1       0       0       0       0
  1387 ;;      Temps:          2       0       0       0       0
  1388 ;;      Totals:         5       0       0       0       0
  1389 ;;Total ram usage:        5 bytes
  1390 ;; Hardware stack levels used:    1
  1391 ;; This function calls:
  1392 ;;		Nothing
  1393 ;; This function is called by:
  1394 ;;		_ISR
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           
  1399                           ;psect for function _cambioDisplay
  1400  010A                     _cambioDisplay:	
  1401                           
  1402                           ;incstack = 0
  1403                           ; Regs used in _cambioDisplay: [wreg-fsr0h+status,2+status,0]
  1404                           ;cambioDisplay@valUni stored from wreg
  1405  010A  00F4               	movwf	cambioDisplay@valUni
  1406                           
  1407                           ;Display_7.c: 64:     switch (bandera){
  1408  010B  2927               	goto	i1l1039
  1409  010C                     i1l121:	
  1410                           ;Display_7.c: 65:         case 0:
  1411                           
  1412                           
  1413                           ;Display_7.c: 66:             PORTCbits.RC0 = 0;
  1414  010C  1283               	bcf	3,5	;RP0=0, select bank0
  1415  010D  1303               	bcf	3,6	;RP1=0, select bank0
  1416  010E  1007               	bcf	7,0	;volatile
  1417                           
  1418                           ;Display_7.c: 67:             PORTD = numerosDisplay[valUni];
  1419  010F  0874               	movf	cambioDisplay@valUni,w
  1420  0110  3E20               	addlw	(low (_numerosDisplay| 0))& (0+255)
  1421  0111  0084               	movwf	4
  1422  0112  1383               	bcf	3,7	;select IRP bank0
  1423  0113  0800               	movf	0,w
  1424  0114  0088               	movwf	8	;volatile
  1425                           
  1426                           ;Display_7.c: 68:             PORTCbits.RC2 = 1;
  1427  0115  1507               	bsf	7,2	;volatile
  1428                           
  1429                           ;Display_7.c: 69:             break;
  1430  0116  0008               	return
  1431  0117                     i1l123:	
  1432                           ;Display_7.c: 70:         case 255:
  1433                           
  1434                           
  1435                           ;Display_7.c: 71:             PORTCbits.RC2 = 0;
  1436  0117  1283               	bcf	3,5	;RP0=0, select bank0
  1437  0118  1303               	bcf	3,6	;RP1=0, select bank0
  1438  0119  1107               	bcf	7,2	;volatile
  1439                           
  1440                           ;Display_7.c: 72:             PORTD = numerosDisplay[valDec];
  1441  011A  0870               	movf	cambioDisplay@valDec,w
  1442  011B  3E20               	addlw	(low (_numerosDisplay| 0))& (0+255)
  1443  011C  0084               	movwf	4
  1444  011D  1383               	bcf	3,7	;select IRP bank0
  1445  011E  0800               	movf	0,w
  1446  011F  0088               	movwf	8	;volatile
  1447                           
  1448                           ;Display_7.c: 73:             PORTCbits.RC0 = 1;
  1449  0120  1407               	bsf	7,0	;volatile
  1450                           
  1451                           ;Display_7.c: 74:             break;
  1452  0121  0008               	return
  1453  0122                     i1l1037:	
  1454                           
  1455                           ;Display_7.c: 76:             PORTD = PORTD;
  1456  0122  1283               	bcf	3,5	;RP0=0, select bank0
  1457  0123  1303               	bcf	3,6	;RP1=0, select bank0
  1458  0124  0808               	movf	8,w	;volatile
  1459  0125  0088               	movwf	8	;volatile
  1460                           
  1461                           ;Display_7.c: 77:     }
  1462  0126  0008               	return
  1463  0127                     i1l1039:	
  1464  0127  0871               	movf	cambioDisplay@bandera,w
  1465  0128  00F2               	movwf	??_cambioDisplay
  1466  0129  01F3               	clrf	??_cambioDisplay+1
  1467                           
  1468                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1469                           ; Switch size 1, requested type "simple"
  1470                           ; Number of cases is 1, Range of values is 0 to 0
  1471                           ; switch strategies available:
  1472                           ; Name         Instructions Cycles
  1473                           ; simple_byte            4     3 (average)
  1474                           ; direct_byte           11     8 (fixed)
  1475                           ; jumptable            260     6 (fixed)
  1476                           ;	Chosen strategy is simple_byte
  1477  012A  0873               	movf	??_cambioDisplay+1,w
  1478  012B  3A00               	xorlw	0	; case 0
  1479  012C  1903               	skipnz
  1480  012D  292F               	goto	i1l1349
  1481  012E  2922               	goto	i1l1037
  1482  012F                     i1l1349:	
  1483                           
  1484                           ; Switch size 1, requested type "simple"
  1485                           ; Number of cases is 2, Range of values is 0 to 255
  1486                           ; switch strategies available:
  1487                           ; Name         Instructions Cycles
  1488                           ; simple_byte            7     4 (average)
  1489                           ; jumptable            260     6 (fixed)
  1490                           ;	Chosen strategy is simple_byte
  1491  012F  0872               	movf	??_cambioDisplay,w
  1492  0130  3A00               	xorlw	0	; case 0
  1493  0131  1903               	skipnz
  1494  0132  290C               	goto	i1l121
  1495  0133  3AFF               	xorlw	255	; case 255
  1496  0134  1903               	skipnz
  1497  0135  2917               	goto	i1l123
  1498  0136  2922               	goto	i1l1037
  1499  0137  0008               	return
  1500  0138                     __end_of_cambioDisplay:	
  1501  007E                     btemp	set	126	;btemp
  1502  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80      2      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_cambioDisplay

Critical Paths under _main in BANK0

    _main->_config2Display
    _main->_press_Bajar
    _main->_press_Subir

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      98
                     _config2Display
                     _config_PUERTOS
                        _press_Bajar
                        _press_Subir
 ---------------------------------------------------------------------------------
 (1) _press_Subir                                          2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _press_Bajar                                          2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _config_PUERTOS                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config2Display                                       2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  5     5      0     218
                                              5 COMMON     5     5      0
                      _cambioDisplay
 ---------------------------------------------------------------------------------
 (3) _cambioDisplay                                        5     3      2     218
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config2Display
   _config_PUERTOS
   _press_Bajar
   _press_Subir

 _ISR (ROOT)
   _cambioDisplay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      2      12       5       22.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      20      12        0.0%
ABS                  0      0      20       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Feb 02 02:19:04 2020

                       pc 0002               __CFG_CP$OFF 0000                        fsr 0004  
                     l108 009C                       u307 0103              __CFG_CPD$OFF 0000  
                     _ISR 0138                       u277 00B6                       u287 00D1  
                     u297 00E8                       fsr0 0004                       indf 0000  
    cambioDisplay@bandera 0071              __CFG_LVP$OFF 0000                      ?_ISR 0070  
                    l1071 0034                      l1081 0051                      l1073 0039  
                    l1161 00F6                      l1137 00C4                      l1083 0057  
                    l1075 003F                      l1341 0088                      l1085 0058  
                    l1077 0045                      l1343 008D                      l1087 005D  
                    l1079 004B                      l1345 0092                      l1337 0078  
                    l1089 0064                      l1193 016E                      l1347 0097  
                    l1339 0083                      _IOCB 0096                      i1l60 0153  
                    i1l57 0141                      _WPUB 0095              __CFG_WRT$OFF 0000  
                    _main 015C                      btemp 007E                      start 000E  
           __CFG_IESO$OFF 0000                     ??_ISR 0075                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l121 010C  
                   i1l123 0117                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
        ??_config2Display 0032            __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 0011              __end_of_main 0179  
                  ??_main 0032                    _ANSELH 0189          ??_config_PUERTOS 0030  
            _banderaBoton 007D                    i1l1037 0122                    i1l1039 0127  
                  i1l1349 012F            __CFG_PWRTE$OFF 0000              ?_press_Bajar 0070  
                  saved_w 007E              ?_press_Subir 0070   __end_of__initialization 0021  
          __pcstackCOMMON 0070              __pidataBANK0 01A6            _OPTION_REGbits 0081  
  __size_of_cambioDisplay 002E                __pmaintext 015C                __pintentry 0004  
           _cambioDisplay 010A     config2Display@FreqOsc 0030                   __ptext1 00A6  
                 __ptext2 00D8                   __ptext3 0179                   __ptext4 0025  
                 __ptext5 0138                   __ptext6 010A              __size_of_ISR 0024  
    __size_of_press_Bajar 0032      end_of_initialization 0021      __size_of_press_Subir 0032  
          ?_cambioDisplay 0070                 _PORTBbits 0006                 _PORTCbits 0007  
               _TRISCbits 0087   __size_of_config2Display 0081       cambioDisplay@valDec 0070  
     cambioDisplay@valUni 0074       start_initialization 0011               __end_of_ISR 015C  
         ??_cambioDisplay 0072               _banderaTMR0 007A  __CFG_FOSC$INTRC_NOCLKOUT 0000  
 __size_of_config_PUERTOS 001C                init_fetch0 0195               __pdataBANK0 0020  
             __pbssCOMMON 007A                 ___latbits 0002             __pcstackBANK0 0030  
               _banderaDO 007B                 _banderaUP 007C         interrupt_function 0004  
          _config2Display 0025             ??_press_Bajar 0030             ??_press_Subir 0030  
  __end_of_config2Display 00A6            _config_PUERTOS 0179            _numerosDisplay 0020  
       __CFG_BOR4V$BOR40V 0000       __end_of_press_Bajar 010A           ?_config2Display 0030  
     __end_of_press_Subir 00D8             __size_of_main 001D    __end_of_config_PUERTOS 0195  
              _INTCONbits 000B                  init_ram0 0199                  intlevel1 0000  
   __end_of_cambioDisplay 0138           ?_config_PUERTOS 0070                _OSCCONbits 008F  
             _press_Bajar 00D8               _press_Subir 00A6  
