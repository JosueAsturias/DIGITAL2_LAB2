

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Feb 02 21:45:33 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.05
    26                           ; Generated 20/12/2018 GMT
    27                           ; 
    28                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215  0000                     	;# 
   216  0001                     	;# 
   217  0002                     	;# 
   218  0003                     	;# 
   219  0004                     	;# 
   220  0005                     	;# 
   221  0006                     	;# 
   222  0007                     	;# 
   223  0008                     	;# 
   224  0009                     	;# 
   225  000A                     	;# 
   226  000B                     	;# 
   227  000C                     	;# 
   228  000D                     	;# 
   229  000E                     	;# 
   230  000E                     	;# 
   231  000F                     	;# 
   232  0010                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0014                     	;# 
   237  0015                     	;# 
   238  0015                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001B                     	;# 
   246  001C                     	;# 
   247  001D                     	;# 
   248  001E                     	;# 
   249  001F                     	;# 
   250  0081                     	;# 
   251  0085                     	;# 
   252  0086                     	;# 
   253  0087                     	;# 
   254  0088                     	;# 
   255  0089                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  008E                     	;# 
   259  008F                     	;# 
   260  0090                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0094                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  009F                     	;# 
   278  0105                     	;# 
   279  0107                     	;# 
   280  0108                     	;# 
   281  0109                     	;# 
   282  010C                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  010E                     	;# 
   286  010F                     	;# 
   287  0185                     	;# 
   288  0187                     	;# 
   289  0188                     	;# 
   290  0189                     	;# 
   291  018C                     	;# 
   292  018D                     	;# 
   293  0000                     	;# 
   294  0001                     	;# 
   295  0002                     	;# 
   296  0003                     	;# 
   297  0004                     	;# 
   298  0005                     	;# 
   299  0006                     	;# 
   300  0007                     	;# 
   301  0008                     	;# 
   302  0009                     	;# 
   303  000A                     	;# 
   304  000B                     	;# 
   305  000C                     	;# 
   306  000D                     	;# 
   307  000E                     	;# 
   308  000E                     	;# 
   309  000F                     	;# 
   310  0010                     	;# 
   311  0011                     	;# 
   312  0012                     	;# 
   313  0013                     	;# 
   314  0014                     	;# 
   315  0015                     	;# 
   316  0015                     	;# 
   317  0016                     	;# 
   318  0017                     	;# 
   319  0018                     	;# 
   320  0019                     	;# 
   321  001A                     	;# 
   322  001B                     	;# 
   323  001B                     	;# 
   324  001C                     	;# 
   325  001D                     	;# 
   326  001E                     	;# 
   327  001F                     	;# 
   328  0081                     	;# 
   329  0085                     	;# 
   330  0086                     	;# 
   331  0087                     	;# 
   332  0088                     	;# 
   333  0089                     	;# 
   334  008C                     	;# 
   335  008D                     	;# 
   336  008E                     	;# 
   337  008F                     	;# 
   338  0090                     	;# 
   339  0091                     	;# 
   340  0092                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0093                     	;# 
   344  0094                     	;# 
   345  0095                     	;# 
   346  0096                     	;# 
   347  0097                     	;# 
   348  0098                     	;# 
   349  0099                     	;# 
   350  009A                     	;# 
   351  009B                     	;# 
   352  009C                     	;# 
   353  009D                     	;# 
   354  009E                     	;# 
   355  009F                     	;# 
   356  0105                     	;# 
   357  0107                     	;# 
   358  0108                     	;# 
   359  0109                     	;# 
   360  010C                     	;# 
   361  010C                     	;# 
   362  010D                     	;# 
   363  010E                     	;# 
   364  010F                     	;# 
   365  0185                     	;# 
   366  0187                     	;# 
   367  0188                     	;# 
   368  0189                     	;# 
   369  018C                     	;# 
   370  018D                     	;# 
   371                           
   372                           	psect	idataBANK0
   373  0311                     __pidataBANK0:	
   374                           
   375                           ;initializer for _numerosDisplay
   376  0311  343F               	retlw	63
   377  0312  3406               	retlw	6
   378  0313  345B               	retlw	91
   379  0314  344F               	retlw	79
   380  0315  3466               	retlw	102
   381  0316  346D               	retlw	109
   382  0317  347D               	retlw	125
   383  0318  3407               	retlw	7
   384  0319  347F               	retlw	127
   385  031A  346F               	retlw	111
   386  031B  3477               	retlw	119
   387  031C  347C               	retlw	124
   388  031D  3439               	retlw	57
   389  031E  345E               	retlw	94
   390  031F  3479               	retlw	121
   391  0320  3471               	retlw	113
   392                           
   393                           ;initializer for _valorTMR0
   394  0321  3483               	retlw	131
   395  0001                     _TMR0	set	1
   396  0007                     _PORTCbits	set	7
   397  001E                     _ADRESH	set	30
   398  001F                     _ADCON0bits	set	31
   399  0006                     _PORTBbits	set	6
   400  0008                     _PORTD	set	8
   401  0007                     _PORTC	set	7
   402  0006                     _PORTB	set	6
   403  0009                     _PORTE	set	9
   404  0009                     _PORTEbits	set	9
   405  0005                     _PORTA	set	5
   406  000B                     _INTCONbits	set	11
   407  000C                     _PIR1bits	set	12
   408  008F                     _OSCCONbits	set	143
   409  0087                     _TRISCbits	set	135
   410  009E                     _ADRESL	set	158
   411  0089                     _TRISEbits	set	137
   412  0085                     _TRISAbits	set	133
   413  009F                     _ADCON1bits	set	159
   414  0096                     _IOCB	set	150
   415  0081                     _OPTION_REGbits	set	129
   416  0095                     _WPUB	set	149
   417  0089                     _TRISE	set	137
   418  0086                     _TRISB	set	134
   419  0085                     _TRISA	set	133
   420  0087                     _TRISC	set	135
   421  0088                     _TRISD	set	136
   422  008C                     _PIE1bits	set	140
   423  0188                     _ANSELbits	set	392
   424  0189                     _ANSELH	set	393
   425  0188                     _ANSEL	set	392
   426                           
   427                           ; #config settings
   428  0000                     
   429                           	psect	cinit
   430  0011                     start_initialization:	
   431  0011                     __initialization:	
   432                           
   433                           ; Initialize objects allocated to BANK0
   434  0011  1383               	bcf	3,7	;select IRP bank0
   435  0012  3031               	movlw	low (__pdataBANK0+17)
   436  0013  00FD               	movwf	btemp+-1
   437  0014  3003               	movlw	high __pidataBANK0
   438  0015  00FE               	movwf	btemp
   439  0016  3011               	movlw	low __pidataBANK0
   440  0017  00FF               	movwf	btemp+1
   441  0018  3020               	movlw	low __pdataBANK0
   442  0019  0084               	movwf	4
   443  001A  120A  118A  2326   	fcall	init_ram0
   444                           
   445                           ; Clear objects allocated to BANK0
   446  001D  01B9               	clrf	__pbssBANK0& (0+127)
   447  001E  01BA               	clrf	(__pbssBANK0+1)& (0+127)
   448  001F  01BB               	clrf	(__pbssBANK0+2)& (0+127)
   449                           
   450                           ; Clear objects allocated to COMMON
   451  0020  01FA               	clrf	__pbssCOMMON& (0+127)
   452  0021  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   453  0022  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   454  0023  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
   455  0024                     end_of_initialization:	
   456                           ;End of C runtime variable initialization code
   457                           
   458  0024                     __end_of__initialization:	
   459  0024  0183               	clrf	3
   460  0025  120A  118A  2997   	ljmp	_main	;jump to C main() function
   461                           
   462                           	psect	bssCOMMON
   463  007A                     __pbssCOMMON:	
   464  007A                     _banderaTMR0:	
   465  007A                     	ds	1
   466  007B                     _banderaDO:	
   467  007B                     	ds	1
   468  007C                     _banderaUP:	
   469  007C                     	ds	1
   470  007D                     _banderaBoton:	
   471  007D                     	ds	1
   472                           
   473                           	psect	bssBANK0
   474  0039                     __pbssBANK0:	
   475  0039                     _valorDisplay_Uni:	
   476  0039                     	ds	1
   477  003A                     _valorDisplay_Dec:	
   478  003A                     	ds	1
   479  003B                     _banderaADC:	
   480  003B                     	ds	1
   481                           
   482                           	psect	dataBANK0
   483  0020                     __pdataBANK0:	
   484  0020                     _numerosDisplay:	
   485  0020                     	ds	16
   486  0030                     _valorTMR0:	
   487  0030                     	ds	1
   488                           
   489                           	psect	inittext
   490  0322                     init_fetch0:	
   491                           ;	Called with low address in FSR and high address in W
   492                           
   493  0322  087E               	movf	126,w
   494  0323  008A               	movwf	10
   495  0324  087F               	movf	127,w
   496  0325  0082               	movwf	2
   497  0326                     init_ram0:	
   498                           ;Called with:
   499                           ;	high address of idata address in btemp 
   500                           ;	low address of idata address in btemp+1 
   501                           ;	low address of data in FSR
   502                           ;	high address + 1 of data in btemp-1
   503                           
   504  0326  2322  120A  118A   	fcall	init_fetch0
   505  0329  0080               	movwf	0
   506  032A  0A84               	incf	4,f
   507  032B  0804               	movf	4,w
   508  032C  067D               	xorwf	125,w
   509  032D  1903               	btfsc	3,2
   510  032E  3400               	retlw	0
   511  032F  0AFF               	incf	127,f
   512  0330  1903               	btfsc	3,2
   513  0331  0AFE               	incf	126,f
   514  0332  2B26               	goto	init_ram0
   515                           
   516                           	psect	cstackCOMMON
   517  0070                     __pcstackCOMMON:	
   518  0070                     ?_cambioDisplay:	
   519  0070                     ?_config_PUERTOS:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_AnalogRead_8:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_ADCinit:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_press_Subir:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?_press_Bajar:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?_ISR:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_main:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     cambioDisplay@valDec:	
   541                           ; 1 bytes @ 0x0
   542                           
   543                           
   544                           ; 1 bytes @ 0x0
   545  0070                     	ds	1
   546  0071                     cambioDisplay@bandera:	
   547                           
   548                           ; 1 bytes @ 0x1
   549  0071                     	ds	1
   550  0072                     ??_cambioDisplay:	
   551                           
   552                           ; 1 bytes @ 0x2
   553  0072                     	ds	2
   554  0074                     cambioDisplay@valUni:	
   555                           
   556                           ; 1 bytes @ 0x4
   557  0074                     	ds	1
   558  0075                     ??_ISR:	
   559                           
   560                           ; 1 bytes @ 0x5
   561  0075                     	ds	5
   562                           
   563                           	psect	cstackBANK0
   564  0031                     __pcstackBANK0:	
   565  0031                     ??_config_PUERTOS:	
   566  0031                     ?_config2Display:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0031                     ?_ADConfig:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0031                     ??_AnalogRead_8:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0031                     ??_ADCinit:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0031                     ??_press_Subir:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0031                     ??_press_Bajar:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0031                     ADConfig@canal:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0031                     config2Display@FreqOsc:	
   588                           ; 1 bytes @ 0x0
   589                           
   590                           
   591                           ; 2 bytes @ 0x0
   592  0031                     	ds	1
   593  0032                     ADConfig@justificado:	
   594                           
   595                           ; 1 bytes @ 0x1
   596  0032                     	ds	1
   597  0033                     ??_config2Display:	
   598  0033                     ??_ADConfig:	
   599                           ; 1 bytes @ 0x2
   600                           
   601  0033                     AnalogRead_8@just:	
   602                           ; 1 bytes @ 0x2
   603                           
   604                           
   605                           ; 1 bytes @ 0x2
   606  0033                     	ds	1
   607  0034                     AnalogRead_8@conversion:	
   608                           
   609                           ; 1 bytes @ 0x3
   610  0034                     	ds	1
   611  0035                     ADConfig@oscFreq:	
   612                           
   613                           ; 1 bytes @ 0x4
   614  0035                     	ds	1
   615  0036                     ??_main:	
   616                           
   617                           ; 1 bytes @ 0x5
   618  0036                     	ds	2
   619  0038                     main@lectura:	
   620                           
   621                           ; 1 bytes @ 0x7
   622  0038                     	ds	1
   623                           
   624                           	psect	maintext
   625  0197                     __pmaintext:	
   626 ;;
   627 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   628 ;;
   629 ;; *************** function _main *****************
   630 ;; Defined at:
   631 ;;		line 78 in file "main.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;		None
   634 ;; Auto vars:     Size  Location     Type
   635 ;;  lectura         1    7[BANK0 ] unsigned char 
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      void 
   638 ;; Registers used:
   639 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   640 ;; Tracked objects:
   641 ;;		On entry : B00/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   645 ;;      Params:         0       0       0       0       0
   646 ;;      Locals:         0       1       0       0       0
   647 ;;      Temps:          0       2       0       0       0
   648 ;;      Totals:         0       3       0       0       0
   649 ;;Total ram usage:        3 bytes
   650 ;; Hardware stack levels required when called:    3
   651 ;; This function calls:
   652 ;;		_ADCinit
   653 ;;		_ADConfig
   654 ;;		_AnalogRead_8
   655 ;;		_config2Display
   656 ;;		_config_PUERTOS
   657 ;;		_press_Bajar
   658 ;;		_press_Subir
   659 ;; This function is called by:
   660 ;;		Startup code after reset
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           
   665                           ;psect for function _main
   666  0197                     _main:	
   667                           
   668                           ;main.c: 79:     config_PUERTOS();
   669                           
   670                           ;incstack = 0
   671                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   672  0197  120A  118A  22DE  120A  118A  	fcall	_config_PUERTOS
   673                           
   674                           ;main.c: 80:     config2Display(8000);
   675  019C  3040               	movlw	64
   676  019D  1283               	bcf	3,5	;RP0=0, select bank0
   677  019E  1303               	bcf	3,6	;RP1=0, select bank0
   678  019F  00B1               	movwf	config2Display@FreqOsc
   679  01A0  301F               	movlw	31
   680  01A1  00B2               	movwf	config2Display@FreqOsc+1
   681  01A2  120A  118A  20FF  120A  118A  	fcall	_config2Display
   682                           
   683                           ;main.c: 81:     ADConfig(8, 5, 'H');
   684  01A7  3005               	movlw	5
   685  01A8  1283               	bcf	3,5	;RP0=0, select bank0
   686  01A9  1303               	bcf	3,6	;RP1=0, select bank0
   687  01AA  00B6               	movwf	??_main
   688  01AB  0836               	movf	??_main,w
   689  01AC  00B1               	movwf	ADConfig@canal
   690  01AD  3048               	movlw	72
   691  01AE  00B7               	movwf	??_main+1
   692  01AF  0837               	movf	??_main+1,w
   693  01B0  00B2               	movwf	ADConfig@justificado
   694  01B1  3008               	movlw	8
   695  01B2  120A  118A  2028  120A  118A  	fcall	_ADConfig
   696                           
   697                           ;main.c: 82:     INTCONbits.GIE = 1;
   698  01B7  178B               	bsf	11,7	;volatile
   699  01B8                     l1572:	
   700                           
   701                           ;main.c: 84:         if (banderaADC == 1){
   702  01B8  1283               	bcf	3,5	;RP0=0, select bank0
   703  01B9  1303               	bcf	3,6	;RP1=0, select bank0
   704  01BA  033B               	decf	_banderaADC,w
   705  01BB  1D03               	btfss	3,2
   706  01BC  29EE               	goto	l1594
   707                           
   708                           ;main.c: 85:             valorDisplay_Uni = 9;
   709  01BD  3009               	movlw	9
   710  01BE  00B6               	movwf	??_main
   711  01BF  0836               	movf	??_main,w
   712  01C0  00B9               	movwf	_valorDisplay_Uni
   713                           
   714                           ;main.c: 86:             uint8_t lectura = AnalogRead_8('H');
   715  01C1  3048               	movlw	72
   716  01C2  120A  118A  22BD  120A  118A  	fcall	_AnalogRead_8
   717  01C7  1283               	bcf	3,5	;RP0=0, select bank0
   718  01C8  1303               	bcf	3,6	;RP1=0, select bank0
   719  01C9  00B6               	movwf	??_main
   720  01CA  0836               	movf	??_main,w
   721  01CB  00B8               	movwf	main@lectura
   722                           
   723                           ;main.c: 87:             if(lectura > PORTA){
   724  01CC  0838               	movf	main@lectura,w
   725  01CD  0205               	subwf	5,w	;volatile
   726  01CE  1803               	skipnc
   727  01CF  29D2               	goto	l1582
   728                           
   729                           ;main.c: 88:                 PORTEbits.RE1 = 1;
   730  01D0  1489               	bsf	9,1	;volatile
   731                           
   732                           ;main.c: 89:             }
   733  01D1  29D6               	goto	l1586
   734  01D2                     l1582:	
   735  01D2  0838               	movf	main@lectura,w
   736  01D3  0205               	subwf	5,w	;volatile
   737  01D4  1803               	btfsc	3,0
   738                           
   739                           ;main.c: 91:                 PORTEbits.RE1 = 0;
   740  01D5  1089               	bcf	9,1	;volatile
   741  01D6                     l1586:	
   742                           
   743                           ;main.c: 93:             valorDisplay_Uni = lectura & 0x0F;
   744  01D6  0838               	movf	main@lectura,w
   745  01D7  390F               	andlw	15
   746  01D8  00B6               	movwf	??_main
   747  01D9  0836               	movf	??_main,w
   748  01DA  00B9               	movwf	_valorDisplay_Uni
   749                           
   750                           ;main.c: 94:             valorDisplay_Dec = (lectura & 0xF0) >> 4;
   751  01DB  0838               	movf	main@lectura,w
   752  01DC  00B6               	movwf	??_main
   753  01DD  3004               	movlw	4
   754  01DE                     u425:	
   755  01DE  1003               	clrc
   756  01DF  0CB6               	rrf	??_main,f
   757  01E0  3EFF               	addlw	-1
   758  01E1  1D03               	skipz
   759  01E2  29DE               	goto	u425
   760  01E3  0836               	movf	??_main,w
   761  01E4  390F               	andlw	15
   762  01E5  00B7               	movwf	??_main+1
   763  01E6  0837               	movf	??_main+1,w
   764  01E7  00BA               	movwf	_valorDisplay_Dec
   765                           
   766                           ;main.c: 95:             banderaADC = 0;
   767  01E8  01BB               	clrf	_banderaADC
   768                           
   769                           ;main.c: 96:             ADCinit();
   770  01E9  120A  118A  22FC  120A  118A  	fcall	_ADCinit
   771  01EE                     l1594:	
   772                           
   773                           ;main.c: 98:         press_Subir();
   774  01EE  120A  118A  222D  120A  118A  	fcall	_press_Subir
   775                           
   776                           ;main.c: 99:         press_Bajar();
   777  01F3  120A  118A  225F  120A  118A  	fcall	_press_Bajar
   778  01F8  29B8               	goto	l1572
   779  01F9                     __end_of_main:	
   780                           
   781                           	psect	text1
   782  022D                     __ptext1:	
   783 ;; *************** function _press_Subir *****************
   784 ;; Defined at:
   785 ;;		line 126 in file "main.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;		None
   788 ;; Auto vars:     Size  Location     Type
   789 ;;		None
   790 ;; Return value:  Size  Location     Type
   791 ;;                  1    wreg      void 
   792 ;; Registers used:
   793 ;;		wreg, status,2, status,0
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   799 ;;      Params:         0       0       0       0       0
   800 ;;      Locals:         0       0       0       0       0
   801 ;;      Temps:          0       2       0       0       0
   802 ;;      Totals:         0       2       0       0       0
   803 ;;Total ram usage:        2 bytes
   804 ;; Hardware stack levels used:    1
   805 ;; Hardware stack levels required when called:    2
   806 ;; This function calls:
   807 ;;		Nothing
   808 ;; This function is called by:
   809 ;;		_main
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           
   814                           ;psect for function _press_Subir
   815  022D                     _press_Subir:	
   816                           
   817                           ;main.c: 127:     if (banderaBoton == 1){
   818                           
   819                           ;incstack = 0
   820                           ; Regs used in _press_Subir: [wreg+status,2+status,0]
   821  022D  037D               	decf	_banderaBoton,w
   822  022E  1D03               	btfss	3,2
   823  022F  2A4B               	goto	l1508
   824                           
   825                           ;main.c: 128:         if (banderaUP == 0){
   826  0230  087C               	movf	_banderaUP,w
   827  0231  1D03               	btfss	3,2
   828  0232  2A4B               	goto	l1508
   829                           
   830                           ;main.c: 129:             if (PORTBbits.RB0 == 0){
   831  0233  1283               	bcf	3,5	;RP0=0, select bank0
   832  0234  1303               	bcf	3,6	;RP1=0, select bank0
   833  0235  1806               	btfsc	6,0	;volatile
   834  0236  2A4B               	goto	l1508
   835                           
   836                           ;main.c: 130:                 _delay((unsigned long)((69)*(4000000/4000.0)));
   837  0237  305A               	movlw	90
   838  0238  1283               	bcf	3,5	;RP0=0, select bank0
   839  0239  1303               	bcf	3,6	;RP1=0, select bank0
   840  023A  00B2               	movwf	??_press_Subir+1
   841  023B  309A               	movlw	154
   842  023C  00B1               	movwf	??_press_Subir
   843  023D                     u437:	
   844  023D  0BB1               	decfsz	??_press_Subir,f
   845  023E  2A3D               	goto	u437
   846  023F  0BB2               	decfsz	??_press_Subir+1,f
   847  0240  2A3D               	goto	u437
   848  0241  0000               	nop
   849                           
   850                           ;main.c: 131:                 PORTA = PORTA + 1;
   851  0242  1283               	bcf	3,5	;RP0=0, select bank0
   852  0243  1303               	bcf	3,6	;RP1=0, select bank0
   853  0244  0805               	movf	5,w	;volatile
   854  0245  3E01               	addlw	1
   855  0246  0085               	movwf	5	;volatile
   856                           
   857                           ;main.c: 132:                 banderaBoton = 0;
   858  0247  01FD               	clrf	_banderaBoton
   859                           
   860                           ;main.c: 133:                 banderaUP = 1;
   861  0248  01FC               	clrf	_banderaUP
   862  0249  0AFC               	incf	_banderaUP,f
   863                           
   864                           ;main.c: 134:                 INTCONbits.RBIE = 1;
   865  024A  158B               	bsf	11,3	;volatile
   866  024B                     l1508:	
   867                           
   868                           ;main.c: 138:     if (banderaUP == 1){
   869  024B  037C               	decf	_banderaUP,w
   870  024C  1D03               	btfss	3,2
   871  024D  0008               	return
   872                           
   873                           ;main.c: 139:         if (PORTBbits.RB0 == 1){
   874  024E  1283               	bcf	3,5	;RP0=0, select bank0
   875  024F  1303               	bcf	3,6	;RP1=0, select bank0
   876  0250  1C06               	btfss	6,0	;volatile
   877  0251  0008               	return
   878                           
   879                           ;main.c: 140:         _delay((unsigned long)((69)*(4000000/4000.0)));
   880  0252  305A               	movlw	90
   881  0253  1283               	bcf	3,5	;RP0=0, select bank0
   882  0254  1303               	bcf	3,6	;RP1=0, select bank0
   883  0255  00B2               	movwf	??_press_Subir+1
   884  0256  309A               	movlw	154
   885  0257  00B1               	movwf	??_press_Subir
   886  0258                     u447:	
   887  0258  0BB1               	decfsz	??_press_Subir,f
   888  0259  2A58               	goto	u447
   889  025A  0BB2               	decfsz	??_press_Subir+1,f
   890  025B  2A58               	goto	u447
   891  025C  0000               	nop
   892                           
   893                           ;main.c: 141:         banderaUP = 0;
   894  025D  01FC               	clrf	_banderaUP
   895  025E  0008               	return
   896  025F                     __end_of_press_Subir:	
   897                           
   898                           	psect	text2
   899  025F                     __ptext2:	
   900 ;; *************** function _press_Bajar *****************
   901 ;; Defined at:
   902 ;;		line 145 in file "main.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;		None
   905 ;; Auto vars:     Size  Location     Type
   906 ;;		None
   907 ;; Return value:  Size  Location     Type
   908 ;;                  1    wreg      void 
   909 ;; Registers used:
   910 ;;		wreg, status,2, status,0
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   916 ;;      Params:         0       0       0       0       0
   917 ;;      Locals:         0       0       0       0       0
   918 ;;      Temps:          0       2       0       0       0
   919 ;;      Totals:         0       2       0       0       0
   920 ;;Total ram usage:        2 bytes
   921 ;; Hardware stack levels used:    1
   922 ;; Hardware stack levels required when called:    2
   923 ;; This function calls:
   924 ;;		Nothing
   925 ;; This function is called by:
   926 ;;		_main
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           
   931                           ;psect for function _press_Bajar
   932  025F                     _press_Bajar:	
   933                           
   934                           ;main.c: 146:     if (banderaBoton == 1){
   935                           
   936                           ;incstack = 0
   937                           ; Regs used in _press_Bajar: [wreg+status,2+status,0]
   938  025F  037D               	decf	_banderaBoton,w
   939  0260  1D03               	btfss	3,2
   940  0261  2A7D               	goto	l1532
   941                           
   942                           ;main.c: 147:         if (banderaDO == 0){
   943  0262  087B               	movf	_banderaDO,w
   944  0263  1D03               	btfss	3,2
   945  0264  2A7D               	goto	l1532
   946                           
   947                           ;main.c: 148:             if (PORTBbits.RB2 == 0){
   948  0265  1283               	bcf	3,5	;RP0=0, select bank0
   949  0266  1303               	bcf	3,6	;RP1=0, select bank0
   950  0267  1906               	btfsc	6,2	;volatile
   951  0268  2A7D               	goto	l1532
   952                           
   953                           ;main.c: 149:                 _delay((unsigned long)((69)*(4000000/4000.0)));
   954  0269  305A               	movlw	90
   955  026A  1283               	bcf	3,5	;RP0=0, select bank0
   956  026B  1303               	bcf	3,6	;RP1=0, select bank0
   957  026C  00B2               	movwf	??_press_Bajar+1
   958  026D  309A               	movlw	154
   959  026E  00B1               	movwf	??_press_Bajar
   960  026F                     u457:	
   961  026F  0BB1               	decfsz	??_press_Bajar,f
   962  0270  2A6F               	goto	u457
   963  0271  0BB2               	decfsz	??_press_Bajar+1,f
   964  0272  2A6F               	goto	u457
   965  0273  0000               	nop
   966                           
   967                           ;main.c: 150:                 PORTA = PORTA - 1;
   968  0274  1283               	bcf	3,5	;RP0=0, select bank0
   969  0275  1303               	bcf	3,6	;RP1=0, select bank0
   970  0276  0805               	movf	5,w	;volatile
   971  0277  3EFF               	addlw	255
   972  0278  0085               	movwf	5	;volatile
   973                           
   974                           ;main.c: 151:                 banderaBoton = 0;
   975  0279  01FD               	clrf	_banderaBoton
   976                           
   977                           ;main.c: 152:                 banderaDO = 1;
   978  027A  01FB               	clrf	_banderaDO
   979  027B  0AFB               	incf	_banderaDO,f
   980                           
   981                           ;main.c: 153:                 INTCONbits.RBIE = 1;
   982  027C  158B               	bsf	11,3	;volatile
   983  027D                     l1532:	
   984                           
   985                           ;main.c: 157:     if (banderaDO == 1){
   986  027D  037B               	decf	_banderaDO,w
   987  027E  1D03               	btfss	3,2
   988  027F  0008               	return
   989                           
   990                           ;main.c: 158:         if (PORTBbits.RB2 == 1){
   991  0280  1283               	bcf	3,5	;RP0=0, select bank0
   992  0281  1303               	bcf	3,6	;RP1=0, select bank0
   993  0282  1D06               	btfss	6,2	;volatile
   994  0283  0008               	return
   995                           
   996                           ;main.c: 159:         _delay((unsigned long)((69)*(4000000/4000.0)));
   997  0284  305A               	movlw	90
   998  0285  1283               	bcf	3,5	;RP0=0, select bank0
   999  0286  1303               	bcf	3,6	;RP1=0, select bank0
  1000  0287  00B2               	movwf	??_press_Bajar+1
  1001  0288  309A               	movlw	154
  1002  0289  00B1               	movwf	??_press_Bajar
  1003  028A                     u467:	
  1004  028A  0BB1               	decfsz	??_press_Bajar,f
  1005  028B  2A8A               	goto	u467
  1006  028C  0BB2               	decfsz	??_press_Bajar+1,f
  1007  028D  2A8A               	goto	u467
  1008  028E  0000               	nop
  1009                           
  1010                           ;main.c: 160:         banderaDO = 0;
  1011  028F  01FB               	clrf	_banderaDO
  1012  0290  0008               	return
  1013  0291                     __end_of_press_Bajar:	
  1014                           
  1015                           	psect	text3
  1016  02DE                     __ptext3:	
  1017 ;; *************** function _config_PUERTOS *****************
  1018 ;; Defined at:
  1019 ;;		line 104 in file "main.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;		None
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;		None
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      void 
  1026 ;; Registers used:
  1027 ;;		wreg, status,2
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1033 ;;      Params:         0       0       0       0       0
  1034 ;;      Locals:         0       0       0       0       0
  1035 ;;      Temps:          0       0       0       0       0
  1036 ;;      Totals:         0       0       0       0       0
  1037 ;;Total ram usage:        0 bytes
  1038 ;; Hardware stack levels used:    1
  1039 ;; Hardware stack levels required when called:    2
  1040 ;; This function calls:
  1041 ;;		Nothing
  1042 ;; This function is called by:
  1043 ;;		_main
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047                           
  1048                           ;psect for function _config_PUERTOS
  1049  02DE                     _config_PUERTOS:	
  1050                           
  1051                           ;main.c: 106:     TRISD = 255;
  1052                           
  1053                           ;incstack = 0
  1054                           ; Regs used in _config_PUERTOS: [wreg+status,2]
  1055  02DE  30FF               	movlw	255
  1056  02DF  1683               	bsf	3,5	;RP0=1, select bank1
  1057  02E0  1303               	bcf	3,6	;RP1=0, select bank1
  1058  02E1  0088               	movwf	8	;volatile
  1059                           
  1060                           ;main.c: 107:     TRISC = 255;
  1061  02E2  30FF               	movlw	255
  1062  02E3  0087               	movwf	7	;volatile
  1063                           
  1064                           ;main.c: 108:     TRISA = 0;
  1065  02E4  0185               	clrf	5	;volatile
  1066                           
  1067                           ;main.c: 109:     TRISB = 0b00000101;
  1068  02E5  3005               	movlw	5
  1069  02E6  0086               	movwf	6	;volatile
  1070                           
  1071                           ;main.c: 110:     TRISE = 0;
  1072  02E7  0189               	clrf	9	;volatile
  1073                           
  1074                           ;main.c: 111:     PORTE = 0;
  1075  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  1076  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  1077  02EA  0189               	clrf	9	;volatile
  1078                           
  1079                           ;main.c: 112:     PORTA = 0;
  1080  02EB  0185               	clrf	5	;volatile
  1081                           
  1082                           ;main.c: 113:     PORTB = 0;
  1083  02EC  0186               	clrf	6	;volatile
  1084                           
  1085                           ;main.c: 114:     PORTC = 0;
  1086  02ED  0187               	clrf	7	;volatile
  1087                           
  1088                           ;main.c: 115:     PORTD = 0;
  1089  02EE  0188               	clrf	8	;volatile
  1090                           
  1091                           ;main.c: 116:     ANSEL = 0;
  1092  02EF  1683               	bsf	3,5	;RP0=1, select bank3
  1093  02F0  1703               	bsf	3,6	;RP1=1, select bank3
  1094  02F1  0188               	clrf	8	;volatile
  1095                           
  1096                           ;main.c: 117:     ANSELH = 0;
  1097  02F2  0189               	clrf	9	;volatile
  1098                           
  1099                           ;main.c: 118:     WPUB = 0b00000101;
  1100  02F3  3005               	movlw	5
  1101  02F4  1683               	bsf	3,5	;RP0=1, select bank1
  1102  02F5  1303               	bcf	3,6	;RP1=0, select bank1
  1103  02F6  0095               	movwf	21	;volatile
  1104                           
  1105                           ;main.c: 119:     OPTION_REGbits.nRBPU = 0;
  1106  02F7  1381               	bcf	1,7	;volatile
  1107                           
  1108                           ;main.c: 122:     IOCB = 0b00000101;;
  1109  02F8  3005               	movlw	5
  1110  02F9  0096               	movwf	22	;volatile
  1111                           
  1112                           ;main.c: 123:     INTCONbits.RBIE = 1;
  1113  02FA  158B               	bsf	11,3	;volatile
  1114  02FB  0008               	return
  1115  02FC                     __end_of_config_PUERTOS:	
  1116                           
  1117                           	psect	text4
  1118  00FF                     __ptext4:	
  1119 ;; *************** function _config2Display *****************
  1120 ;; Defined at:
  1121 ;;		line 15 in file "Display_7.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;  FreqOsc         2    0[BANK0 ] unsigned int 
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;		None
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1135 ;;      Params:         0       2       0       0       0
  1136 ;;      Locals:         0       0       0       0       0
  1137 ;;      Temps:          0       1       0       0       0
  1138 ;;      Totals:         0       3       0       0       0
  1139 ;;Total ram usage:        3 bytes
  1140 ;; Hardware stack levels used:    1
  1141 ;; Hardware stack levels required when called:    2
  1142 ;; This function calls:
  1143 ;;		Nothing
  1144 ;; This function is called by:
  1145 ;;		_main
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           
  1150                           ;psect for function _config2Display
  1151  00FF                     _config2Display:	
  1152                           
  1153                           ;Display_7.c: 16:     TRISD = 0;
  1154                           
  1155                           ;incstack = 0
  1156                           ; Regs used in _config2Display: [wreg-fsr0h+status,2+status,0]
  1157  00FF  1683               	bsf	3,5	;RP0=1, select bank1
  1158  0100  1303               	bcf	3,6	;RP1=0, select bank1
  1159  0101  0188               	clrf	8	;volatile
  1160                           
  1161                           ;Display_7.c: 17:     PORTD = 0;
  1162  0102  1283               	bcf	3,5	;RP0=0, select bank0
  1163  0103  1303               	bcf	3,6	;RP1=0, select bank0
  1164  0104  0188               	clrf	8	;volatile
  1165                           
  1166                           ;Display_7.c: 18:     TRISCbits.TRISC2 = 0;
  1167  0105  1683               	bsf	3,5	;RP0=1, select bank1
  1168  0106  1303               	bcf	3,6	;RP1=0, select bank1
  1169  0107  1107               	bcf	7,2	;volatile
  1170                           
  1171                           ;Display_7.c: 19:     TRISCbits.TRISC0 = 0;
  1172  0108  1007               	bcf	7,0	;volatile
  1173                           
  1174                           ;Display_7.c: 20:     PORTCbits.RC2 = 0;
  1175  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1176  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1177  010B  1107               	bcf	7,2	;volatile
  1178                           
  1179                           ;Display_7.c: 21:     PORTCbits.RC0 =0;
  1180  010C  1007               	bcf	7,0	;volatile
  1181                           
  1182                           ;Display_7.c: 24:     switch (FreqOsc){
  1183  010D  2953               	goto	l1374
  1184  010E                     l1352:	
  1185                           
  1186                           ;Display_7.c: 27:             OSCCONbits.IRCF = 0b000;
  1187  010E  308F               	movlw	-113
  1188  010F  1683               	bsf	3,5	;RP0=1, select bank1
  1189  0110  1303               	bcf	3,6	;RP1=0, select bank1
  1190  0111  058F               	andwf	15,f	;volatile
  1191                           
  1192                           ;Display_7.c: 28:             break;
  1193  0112  298B               	goto	l197
  1194  0113                     l1354:	
  1195                           
  1196                           ;Display_7.c: 30:             OSCCONbits.IRCF = 0b001;
  1197  0113  1683               	bsf	3,5	;RP0=1, select bank1
  1198  0114  1303               	bcf	3,6	;RP1=0, select bank1
  1199  0115  080F               	movf	15,w	;volatile
  1200  0116  398F               	andlw	-113
  1201  0117  3810               	iorlw	16
  1202  0118  2951               	goto	L5
  1203  0119                     l1356:	
  1204                           ;Display_7.c: 31:             break;
  1205                           
  1206                           
  1207                           ;Display_7.c: 33:             OSCCONbits.IRCF = 0b010;
  1208  0119  1683               	bsf	3,5	;RP0=1, select bank1
  1209  011A  1303               	bcf	3,6	;RP1=0, select bank1
  1210  011B  080F               	movf	15,w	;volatile
  1211  011C  398F               	andlw	-113
  1212  011D  3820               	iorlw	32
  1213  011E  2951               	goto	L5
  1214  011F                     l1358:	
  1215                           ;Display_7.c: 34:             break;
  1216                           
  1217                           
  1218                           ;Display_7.c: 36:             OSCCONbits.IRCF = 0b011;
  1219  011F  1683               	bsf	3,5	;RP0=1, select bank1
  1220  0120  1303               	bcf	3,6	;RP1=0, select bank1
  1221  0121  080F               	movf	15,w	;volatile
  1222  0122  398F               	andlw	-113
  1223  0123  3830               	iorlw	48
  1224  0124  2951               	goto	L5
  1225  0125                     l1360:	
  1226                           ;Display_7.c: 37:             break;
  1227                           
  1228                           
  1229                           ;Display_7.c: 39:             OSCCONbits.IRCF = 0b100;
  1230  0125  1683               	bsf	3,5	;RP0=1, select bank1
  1231  0126  1303               	bcf	3,6	;RP1=0, select bank1
  1232  0127  080F               	movf	15,w	;volatile
  1233  0128  398F               	andlw	-113
  1234  0129  3840               	iorlw	64
  1235  012A  2951               	goto	L5
  1236  012B                     l1362:	
  1237                           ;Display_7.c: 40:             break;
  1238                           
  1239                           
  1240                           ;Display_7.c: 42:             OSCCONbits.IRCF = 0b101;
  1241  012B  1683               	bsf	3,5	;RP0=1, select bank1
  1242  012C  1303               	bcf	3,6	;RP1=0, select bank1
  1243  012D  080F               	movf	15,w	;volatile
  1244  012E  398F               	andlw	-113
  1245  012F  3850               	iorlw	80
  1246  0130  2951               	goto	L5
  1247  0131                     l1364:	
  1248                           ;Display_7.c: 43:             break;
  1249                           
  1250                           
  1251                           ;Display_7.c: 45:             OSCCONbits.IRCF = 0b110;
  1252  0131  1683               	bsf	3,5	;RP0=1, select bank1
  1253  0132  1303               	bcf	3,6	;RP1=0, select bank1
  1254  0133  080F               	movf	15,w	;volatile
  1255  0134  398F               	andlw	-113
  1256  0135  3860               	iorlw	96
  1257  0136  008F               	movwf	15	;volatile
  1258                           
  1259                           ;Display_7.c: 46:             OPTION_REGbits.PS = 0b110;
  1260  0137  0801               	movf	1,w	;volatile
  1261  0138  39F8               	andlw	-8
  1262  0139  3806               	iorlw	6
  1263  013A  0081               	movwf	1	;volatile
  1264                           
  1265                           ;Display_7.c: 47:             valorTMR0 = 177;
  1266  013B  30B1               	movlw	177
  1267  013C  2946               	goto	L6
  1268  013D                     l1368:	
  1269                           ;Display_7.c: 48:             break;
  1270                           
  1271                           
  1272                           ;Display_7.c: 50:             OSCCONbits.IRCF = 0b111;
  1273  013D  3070               	movlw	112
  1274  013E  1683               	bsf	3,5	;RP0=1, select bank1
  1275  013F  1303               	bcf	3,6	;RP1=0, select bank1
  1276  0140  048F               	iorwf	15,f	;volatile
  1277                           
  1278                           ;Display_7.c: 51:             OPTION_REGbits.PS = 0b110;
  1279  0141  0801               	movf	1,w	;volatile
  1280  0142  39F8               	andlw	-8
  1281  0143  3806               	iorlw	6
  1282  0144  0081               	movwf	1	;volatile
  1283                           
  1284                           ;Display_7.c: 52:             valorTMR0 = 98;
  1285  0145  3062               	movlw	98
  1286  0146                     L6:	
  1287  0146  1283               	bcf	3,5	;RP0=0, select bank0
  1288  0147  1303               	bcf	3,6	;RP1=0, select bank0
  1289  0148  00B3               	movwf	??_config2Display
  1290  0149  0833               	movf	??_config2Display,w
  1291  014A  00B0               	movwf	_valorTMR0
  1292                           
  1293                           ;Display_7.c: 53:             break;
  1294  014B  298B               	goto	l197
  1295  014C                     l1372:	
  1296                           
  1297                           ;Display_7.c: 55:             OSCCONbits.IRCF = 0b110;
  1298  014C  1683               	bsf	3,5	;RP0=1, select bank1
  1299  014D  1303               	bcf	3,6	;RP1=0, select bank1
  1300  014E  080F               	movf	15,w	;volatile
  1301  014F  398F               	andlw	-113
  1302  0150  3860               	iorlw	96
  1303  0151                     L5:	
  1304  0151  008F               	movwf	15	;volatile
  1305                           
  1306                           ;Display_7.c: 56:     }
  1307  0152  298B               	goto	l197
  1308  0153                     l1374:	
  1309                           
  1310                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 6 sub-sw
      +                          itches
  1311                           ; Switch size 1, requested type "simple"
  1312                           ; Number of cases is 6, Range of values is 0 to 31
  1313                           ; switch strategies available:
  1314                           ; Name         Instructions Cycles
  1315                           ; simple_byte           19    10 (average)
  1316                           ; direct_byte          104     8 (fixed)
  1317                           ; jumptable            260     6 (fixed)
  1318                           ;	Chosen strategy is simple_byte
  1319  0153  0832               	movf	config2Display@FreqOsc+1,w
  1320  0154  3A00               	xorlw	0	; case 0
  1321  0155  1903               	skipnz
  1322  0156  2967               	goto	l1858
  1323  0157  3A01               	xorlw	1	; case 1
  1324  0158  1903               	skipnz
  1325  0159  2972               	goto	l1860
  1326  015A  3A02               	xorlw	2	; case 3
  1327  015B  1903               	skipnz
  1328  015C  2977               	goto	l1862
  1329  015D  3A04               	xorlw	4	; case 7
  1330  015E  1903               	skipnz
  1331  015F  297C               	goto	l1864
  1332  0160  3A08               	xorlw	8	; case 15
  1333  0161  1903               	skipnz
  1334  0162  2981               	goto	l1866
  1335  0163  3A10               	xorlw	16	; case 31
  1336  0164  1903               	skipnz
  1337  0165  2986               	goto	l1868
  1338  0166  294C               	goto	l1372
  1339  0167                     l1858:	
  1340                           
  1341                           ; Switch size 1, requested type "simple"
  1342                           ; Number of cases is 3, Range of values is 31 to 250
  1343                           ; switch strategies available:
  1344                           ; Name         Instructions Cycles
  1345                           ; simple_byte           10     6 (average)
  1346                           ; jumptable            263     9 (fixed)
  1347                           ;	Chosen strategy is simple_byte
  1348  0167  0831               	movf	config2Display@FreqOsc,w
  1349  0168  3A1F               	xorlw	31	; case 31
  1350  0169  1903               	skipnz
  1351  016A  290E               	goto	l1352
  1352  016B  3A62               	xorlw	98	; case 125
  1353  016C  1903               	skipnz
  1354  016D  2913               	goto	l1354
  1355  016E  3A87               	xorlw	135	; case 250
  1356  016F  1903               	skipnz
  1357  0170  2919               	goto	l1356
  1358  0171  294C               	goto	l1372
  1359  0172                     l1860:	
  1360                           
  1361                           ; Switch size 1, requested type "simple"
  1362                           ; Number of cases is 1, Range of values is 244 to 244
  1363                           ; switch strategies available:
  1364                           ; Name         Instructions Cycles
  1365                           ; simple_byte            4     3 (average)
  1366                           ; direct_byte           14    11 (fixed)
  1367                           ; jumptable            263     9 (fixed)
  1368                           ;	Chosen strategy is simple_byte
  1369  0172  0831               	movf	config2Display@FreqOsc,w
  1370  0173  3AF4               	xorlw	244	; case 244
  1371  0174  1903               	skipnz
  1372  0175  291F               	goto	l1358
  1373  0176  294C               	goto	l1372
  1374  0177                     l1862:	
  1375                           
  1376                           ; Switch size 1, requested type "simple"
  1377                           ; Number of cases is 1, Range of values is 232 to 232
  1378                           ; switch strategies available:
  1379                           ; Name         Instructions Cycles
  1380                           ; simple_byte            4     3 (average)
  1381                           ; direct_byte           14    11 (fixed)
  1382                           ; jumptable            263     9 (fixed)
  1383                           ;	Chosen strategy is simple_byte
  1384  0177  0831               	movf	config2Display@FreqOsc,w
  1385  0178  3AE8               	xorlw	232	; case 232
  1386  0179  1903               	skipnz
  1387  017A  2925               	goto	l1360
  1388  017B  294C               	goto	l1372
  1389  017C                     l1864:	
  1390                           
  1391                           ; Switch size 1, requested type "simple"
  1392                           ; Number of cases is 1, Range of values is 208 to 208
  1393                           ; switch strategies available:
  1394                           ; Name         Instructions Cycles
  1395                           ; simple_byte            4     3 (average)
  1396                           ; direct_byte           14    11 (fixed)
  1397                           ; jumptable            263     9 (fixed)
  1398                           ;	Chosen strategy is simple_byte
  1399  017C  0831               	movf	config2Display@FreqOsc,w
  1400  017D  3AD0               	xorlw	208	; case 208
  1401  017E  1903               	skipnz
  1402  017F  292B               	goto	l1362
  1403  0180  294C               	goto	l1372
  1404  0181                     l1866:	
  1405                           
  1406                           ; Switch size 1, requested type "simple"
  1407                           ; Number of cases is 1, Range of values is 160 to 160
  1408                           ; switch strategies available:
  1409                           ; Name         Instructions Cycles
  1410                           ; simple_byte            4     3 (average)
  1411                           ; direct_byte           14    11 (fixed)
  1412                           ; jumptable            263     9 (fixed)
  1413                           ;	Chosen strategy is simple_byte
  1414  0181  0831               	movf	config2Display@FreqOsc,w
  1415  0182  3AA0               	xorlw	160	; case 160
  1416  0183  1903               	skipnz
  1417  0184  2931               	goto	l1364
  1418  0185  294C               	goto	l1372
  1419  0186                     l1868:	
  1420                           
  1421                           ; Switch size 1, requested type "simple"
  1422                           ; Number of cases is 1, Range of values is 64 to 64
  1423                           ; switch strategies available:
  1424                           ; Name         Instructions Cycles
  1425                           ; simple_byte            4     3 (average)
  1426                           ; direct_byte           14    11 (fixed)
  1427                           ; jumptable            263     9 (fixed)
  1428                           ;	Chosen strategy is simple_byte
  1429  0186  0831               	movf	config2Display@FreqOsc,w
  1430  0187  3A40               	xorlw	64	; case 64
  1431  0188  1903               	skipnz
  1432  0189  293D               	goto	l1368
  1433  018A  294C               	goto	l1372
  1434  018B                     l197:	
  1435                           
  1436                           ;Display_7.c: 58:     OPTION_REGbits.T0CS = 0;
  1437  018B  1683               	bsf	3,5	;RP0=1, select bank1
  1438  018C  1303               	bcf	3,6	;RP1=0, select bank1
  1439  018D  1281               	bcf	1,5	;volatile
  1440                           
  1441                           ;Display_7.c: 59:     OPTION_REGbits.T0SE = 0;
  1442  018E  1201               	bcf	1,4	;volatile
  1443                           
  1444                           ;Display_7.c: 60:     OPTION_REGbits.PSA = 0;
  1445  018F  1181               	bcf	1,3	;volatile
  1446                           
  1447                           ;Display_7.c: 61:     TMR0 = valorTMR0;
  1448  0190  1283               	bcf	3,5	;RP0=0, select bank0
  1449  0191  1303               	bcf	3,6	;RP1=0, select bank0
  1450  0192  0830               	movf	_valorTMR0,w
  1451  0193  0081               	movwf	1	;volatile
  1452                           
  1453                           ;Display_7.c: 62:     INTCONbits.T0IF = 0;
  1454  0194  110B               	bcf	11,2	;volatile
  1455                           
  1456                           ;Display_7.c: 63:     INTCONbits.T0IE = 1;
  1457  0195  168B               	bsf	11,5	;volatile
  1458  0196  0008               	return
  1459  0197                     __end_of_config2Display:	
  1460                           
  1461                           	psect	text5
  1462  02BD                     __ptext5:	
  1463 ;; *************** function _AnalogRead_8 *****************
  1464 ;; Defined at:
  1465 ;;		line 96 in file "ADC.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;  just            1    wreg     unsigned char 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;  just            1    2[BANK0 ] unsigned char 
  1470 ;;  conversion      1    3[BANK0 ] unsigned char 
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      unsigned char 
  1473 ;; Registers used:
  1474 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1480 ;;      Params:         0       0       0       0       0
  1481 ;;      Locals:         0       2       0       0       0
  1482 ;;      Temps:          0       2       0       0       0
  1483 ;;      Totals:         0       4       0       0       0
  1484 ;;Total ram usage:        4 bytes
  1485 ;; Hardware stack levels used:    1
  1486 ;; Hardware stack levels required when called:    2
  1487 ;; This function calls:
  1488 ;;		Nothing
  1489 ;; This function is called by:
  1490 ;;		_main
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494                           
  1495                           ;psect for function _AnalogRead_8
  1496  02BD                     _AnalogRead_8:	
  1497                           
  1498                           ;incstack = 0
  1499                           ; Regs used in _AnalogRead_8: [wreg-fsr0h+status,2+status,0]
  1500                           ;AnalogRead_8@just stored from wreg
  1501  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1502  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1503  02BF  00B3               	movwf	AnalogRead_8@just
  1504                           
  1505                           ;ADC.c: 98:     switch (just){
  1506  02C0  2ACC               	goto	l1472
  1507  02C1                     l1466:	
  1508                           
  1509                           ;ADC.c: 100:             conversion = ADRESH;
  1510  02C1  081E               	movf	30,w	;volatile
  1511  02C2  2AC8               	goto	L7
  1512  02C3                     l1468:	
  1513                           ;ADC.c: 101:             break;
  1514                           
  1515                           
  1516                           ;ADC.c: 103:             conversion = ADRESL;
  1517  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  1518  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  1519  02C5  081E               	movf	30,w	;volatile
  1520  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  1521  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  1522  02C8                     L7:	
  1523  02C8  00B1               	movwf	??_AnalogRead_8
  1524  02C9  0831               	movf	??_AnalogRead_8,w
  1525  02CA  00B4               	movwf	AnalogRead_8@conversion
  1526                           
  1527                           ;ADC.c: 104:             break;
  1528  02CB  2ADC               	goto	l1474
  1529  02CC                     l1472:	
  1530  02CC  0833               	movf	AnalogRead_8@just,w
  1531  02CD  00B1               	movwf	??_AnalogRead_8
  1532  02CE  01B2               	clrf	??_AnalogRead_8+1
  1533                           
  1534                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1535                           ; Switch size 1, requested type "simple"
  1536                           ; Number of cases is 1, Range of values is 0 to 0
  1537                           ; switch strategies available:
  1538                           ; Name         Instructions Cycles
  1539                           ; simple_byte            4     3 (average)
  1540                           ; direct_byte           11     8 (fixed)
  1541                           ; jumptable            260     6 (fixed)
  1542                           ;	Chosen strategy is simple_byte
  1543  02CF  0832               	movf	??_AnalogRead_8+1,w
  1544  02D0  3A00               	xorlw	0	; case 0
  1545  02D1  1903               	skipnz
  1546  02D2  2AD4               	goto	l1870
  1547  02D3  2AC1               	goto	l1466
  1548  02D4                     l1870:	
  1549                           
  1550                           ; Switch size 1, requested type "simple"
  1551                           ; Number of cases is 2, Range of values is 72 to 76
  1552                           ; switch strategies available:
  1553                           ; Name         Instructions Cycles
  1554                           ; simple_byte            7     4 (average)
  1555                           ; direct_byte           26    11 (fixed)
  1556                           ; jumptable            263     9 (fixed)
  1557                           ;	Chosen strategy is simple_byte
  1558  02D4  0831               	movf	??_AnalogRead_8,w
  1559  02D5  3A48               	xorlw	72	; case 72
  1560  02D6  1903               	skipnz
  1561  02D7  2AC1               	goto	l1466
  1562  02D8  3A04               	xorlw	4	; case 76
  1563  02D9  1903               	skipnz
  1564  02DA  2AC3               	goto	l1468
  1565  02DB  2AC1               	goto	l1466
  1566  02DC                     l1474:	
  1567                           
  1568                           ;ADC.c: 108:     return (conversion);
  1569  02DC  0834               	movf	AnalogRead_8@conversion,w
  1570  02DD  0008               	return
  1571  02DE                     __end_of_AnalogRead_8:	
  1572                           
  1573                           	psect	text6
  1574  0028                     __ptext6:	
  1575 ;; *************** function _ADConfig *****************
  1576 ;; Defined at:
  1577 ;;		line 16 in file "ADC.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;  oscFreq         1    wreg     unsigned char 
  1580 ;;  canal           1    0[BANK0 ] unsigned char 
  1581 ;;  justificado     1    1[BANK0 ] unsigned char 
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;  oscFreq         1    4[BANK0 ] unsigned char 
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  1    wreg      void 
  1586 ;; Registers used:
  1587 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1593 ;;      Params:         0       2       0       0       0
  1594 ;;      Locals:         0       1       0       0       0
  1595 ;;      Temps:          0       2       0       0       0
  1596 ;;      Totals:         0       5       0       0       0
  1597 ;;Total ram usage:        5 bytes
  1598 ;; Hardware stack levels used:    1
  1599 ;; Hardware stack levels required when called:    2
  1600 ;; This function calls:
  1601 ;;		Nothing
  1602 ;; This function is called by:
  1603 ;;		_main
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           
  1608                           ;psect for function _ADConfig
  1609  0028                     _ADConfig:	
  1610                           
  1611                           ;incstack = 0
  1612                           ; Regs used in _ADConfig: [wreg-fsr0h+status,2+status,0]
  1613                           ;ADConfig@oscFreq stored from wreg
  1614  0028  1283               	bcf	3,5	;RP0=0, select bank0
  1615  0029  1303               	bcf	3,6	;RP1=0, select bank0
  1616  002A  00B5               	movwf	ADConfig@oscFreq
  1617                           
  1618                           ;ADC.c: 17:     switch(oscFreq){
  1619  002B  283C               	goto	l1418
  1620  002C                     l1408:	
  1621                           
  1622                           ;ADC.c: 19:             ADCON0bits.ADCS = 0b00;
  1623  002C  303F               	movlw	-193
  1624  002D  059F               	andwf	31,f	;volatile
  1625                           
  1626                           ;ADC.c: 20:             break;
  1627  002E  285B               	goto	l1420
  1628  002F                     l1410:	
  1629  002F  2837               	goto	l1416
  1630  0030                     l1412:	
  1631                           ;ADC.c: 23:             break;
  1632                           
  1633                           ;ADC.c: 22:             ADCON0bits.ADCS = 0b01;
  1634                           
  1635                           
  1636                           ;ADC.c: 25:             ADCON0bits.ADCS = 0b10;
  1637  0030  081F               	movf	31,w	;volatile
  1638  0031  393F               	andlw	-193
  1639  0032  3880               	iorlw	128
  1640  0033  283A               	goto	L9
  1641  0034                     l1414:	
  1642                           ;ADC.c: 26:             break;
  1643                           
  1644                           
  1645                           ;ADC.c: 28:             ADCON0bits.ADCS = 0b11;
  1646  0034  30C0               	movlw	192
  1647  0035  049F               	iorwf	31,f	;volatile
  1648                           
  1649                           ;ADC.c: 29:             break;
  1650  0036  285B               	goto	l1420
  1651  0037                     l1416:	
  1652                           
  1653                           ;ADC.c: 31:             ADCON0bits.ADCS = 0b01;
  1654  0037  081F               	movf	31,w	;volatile
  1655  0038  393F               	andlw	-193
  1656  0039  3840               	iorlw	64
  1657  003A                     L9:	
  1658  003A  009F               	movwf	31	;volatile
  1659                           
  1660                           ;ADC.c: 32:     }
  1661  003B  285B               	goto	l1420
  1662  003C                     l1418:	
  1663  003C  0835               	movf	ADConfig@oscFreq,w
  1664  003D  00B3               	movwf	??_ADConfig
  1665  003E  01B4               	clrf	??_ADConfig+1
  1666                           
  1667                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1668                           ; Switch size 1, requested type "simple"
  1669                           ; Number of cases is 1, Range of values is 0 to 0
  1670                           ; switch strategies available:
  1671                           ; Name         Instructions Cycles
  1672                           ; simple_byte            4     3 (average)
  1673                           ; direct_byte           11     8 (fixed)
  1674                           ; jumptable            260     6 (fixed)
  1675                           ;	Chosen strategy is simple_byte
  1676  003F  0834               	movf	??_ADConfig+1,w
  1677  0040  3A00               	xorlw	0	; case 0
  1678  0041  1903               	skipnz
  1679  0042  2844               	goto	l1872
  1680  0043  2837               	goto	l1416
  1681  0044                     l1872:	
  1682                           
  1683                           ; Switch size 1, requested type "simple"
  1684                           ; Number of cases is 4, Range of values is 1 to 20
  1685                           ; switch strategies available:
  1686                           ; Name         Instructions Cycles
  1687                           ; simple_byte           13     7 (average)
  1688                           ; direct_byte           71    11 (fixed)
  1689                           ; jumptable            263     9 (fixed)
  1690                           ;	Chosen strategy is simple_byte
  1691  0044  0833               	movf	??_ADConfig,w
  1692  0045  3A01               	xorlw	1	; case 1
  1693  0046  1903               	skipnz
  1694  0047  282C               	goto	l1408
  1695  0048  3A05               	xorlw	5	; case 4
  1696  0049  1903               	skipnz
  1697  004A  282F               	goto	l1410
  1698  004B  3A0C               	xorlw	12	; case 8
  1699  004C  1903               	skipnz
  1700  004D  2830               	goto	l1412
  1701  004E  3A1C               	xorlw	28	; case 20
  1702  004F  1903               	skipnz
  1703  0050  2834               	goto	l1414
  1704  0051  2837               	goto	l1416
  1705  0052                     l147:	
  1706                           ;ADC.c: 34:         case 'H':
  1707                           
  1708  0052  2857               	goto	l150
  1709  0053                     l149:	
  1710                           ;ADC.c: 37:         case 'L':
  1711                           
  1712                           ;ADC.c: 36:             break;
  1713                           
  1714                           ;ADC.c: 35:             ADCON1bits.ADFM = 0;
  1715                           
  1716                           
  1717                           ;ADC.c: 38:             ADCON1bits.ADFM = 1;
  1718  0053  1683               	bsf	3,5	;RP0=1, select bank1
  1719  0054  1303               	bcf	3,6	;RP1=0, select bank1
  1720  0055  179F               	bsf	31,7	;volatile
  1721                           
  1722                           ;ADC.c: 39:             break;
  1723  0056  28C6               	goto	l1440
  1724  0057                     l150:	
  1725                           ;ADC.c: 40:         default:
  1726                           
  1727                           
  1728                           ;ADC.c: 41:             ADCON1bits.ADFM = 0;
  1729  0057  1683               	bsf	3,5	;RP0=1, select bank1
  1730  0058  1303               	bcf	3,6	;RP1=0, select bank1
  1731  0059  139F               	bcf	31,7	;volatile
  1732                           
  1733                           ;ADC.c: 42:     }
  1734  005A  28C6               	goto	l1440
  1735  005B                     l1420:	
  1736  005B  0832               	movf	ADConfig@justificado,w
  1737  005C  00B3               	movwf	??_ADConfig
  1738  005D  01B4               	clrf	??_ADConfig+1
  1739                           
  1740                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1741                           ; Switch size 1, requested type "simple"
  1742                           ; Number of cases is 1, Range of values is 0 to 0
  1743                           ; switch strategies available:
  1744                           ; Name         Instructions Cycles
  1745                           ; simple_byte            4     3 (average)
  1746                           ; direct_byte           11     8 (fixed)
  1747                           ; jumptable            260     6 (fixed)
  1748                           ;	Chosen strategy is simple_byte
  1749  005E  0834               	movf	??_ADConfig+1,w
  1750  005F  3A00               	xorlw	0	; case 0
  1751  0060  1903               	skipnz
  1752  0061  2863               	goto	l1874
  1753  0062  2857               	goto	l150
  1754  0063                     l1874:	
  1755                           
  1756                           ; Switch size 1, requested type "simple"
  1757                           ; Number of cases is 2, Range of values is 72 to 76
  1758                           ; switch strategies available:
  1759                           ; Name         Instructions Cycles
  1760                           ; simple_byte            7     4 (average)
  1761                           ; direct_byte           26    11 (fixed)
  1762                           ; jumptable            263     9 (fixed)
  1763                           ;	Chosen strategy is simple_byte
  1764  0063  0833               	movf	??_ADConfig,w
  1765  0064  3A48               	xorlw	72	; case 72
  1766  0065  1903               	skipnz
  1767  0066  2852               	goto	l147
  1768  0067  3A04               	xorlw	4	; case 76
  1769  0068  1903               	skipnz
  1770  0069  2853               	goto	l149
  1771  006A  2857               	goto	l150
  1772  006B                     l152:	
  1773                           ;ADC.c: 44:         case 0:
  1774                           
  1775                           
  1776                           ;ADC.c: 45:             TRISAbits.TRISA0 = 1;
  1777  006B  1683               	bsf	3,5	;RP0=1, select bank1
  1778  006C  1303               	bcf	3,6	;RP1=0, select bank1
  1779  006D  1405               	bsf	5,0	;volatile
  1780                           
  1781                           ;ADC.c: 46:             ANSELbits.ANS0 = 1;
  1782  006E  1683               	bsf	3,5	;RP0=1, select bank3
  1783  006F  1703               	bsf	3,6	;RP1=1, select bank3
  1784  0070  1408               	bsf	8,0	;volatile
  1785                           
  1786                           ;ADC.c: 47:             ADCON0bits.CHS = 0;
  1787  0071  30C3               	movlw	-61
  1788  0072  1283               	bcf	3,5	;RP0=0, select bank0
  1789  0073  1303               	bcf	3,6	;RP1=0, select bank0
  1790  0074  059F               	andwf	31,f	;volatile
  1791                           
  1792                           ;ADC.c: 48:             break;
  1793  0075  28EA               	goto	l153
  1794  0076                     l154:	
  1795                           ;ADC.c: 49:         case 1:
  1796                           
  1797                           
  1798                           ;ADC.c: 50:             TRISAbits.TRISA1 = 1;
  1799  0076  1683               	bsf	3,5	;RP0=1, select bank1
  1800  0077  1303               	bcf	3,6	;RP1=0, select bank1
  1801  0078  1485               	bsf	5,1	;volatile
  1802                           
  1803                           ;ADC.c: 51:             ANSELbits.ANS1 = 1;
  1804  0079  1683               	bsf	3,5	;RP0=1, select bank3
  1805  007A  1703               	bsf	3,6	;RP1=1, select bank3
  1806  007B  1488               	bsf	8,1	;volatile
  1807                           
  1808                           ;ADC.c: 52:             ADCON0bits.CHS = 1;
  1809  007C  1283               	bcf	3,5	;RP0=0, select bank0
  1810  007D  1303               	bcf	3,6	;RP1=0, select bank0
  1811  007E  081F               	movf	31,w	;volatile
  1812  007F  39C3               	andlw	-61
  1813  0080  3804               	iorlw	4
  1814  0081  28C4               	goto	L15
  1815  0082                     l155:	
  1816                           ;ADC.c: 54:         case 2:
  1817                           
  1818                           ;ADC.c: 53:             break;
  1819                           
  1820                           
  1821                           ;ADC.c: 55:             TRISAbits.TRISA2 = 1;
  1822  0082  1683               	bsf	3,5	;RP0=1, select bank1
  1823  0083  1303               	bcf	3,6	;RP1=0, select bank1
  1824  0084  1505               	bsf	5,2	;volatile
  1825                           
  1826                           ;ADC.c: 56:             ANSELbits.ANS2 = 1;
  1827  0085  1683               	bsf	3,5	;RP0=1, select bank3
  1828  0086  1703               	bsf	3,6	;RP1=1, select bank3
  1829  0087  1508               	bsf	8,2	;volatile
  1830                           
  1831                           ;ADC.c: 57:             ADCON0bits.CHS = 2;
  1832  0088  1283               	bcf	3,5	;RP0=0, select bank0
  1833  0089  1303               	bcf	3,6	;RP1=0, select bank0
  1834  008A  081F               	movf	31,w	;volatile
  1835  008B  39C3               	andlw	-61
  1836  008C  3808               	iorlw	8
  1837  008D  28C4               	goto	L15
  1838  008E                     l156:	
  1839                           ;ADC.c: 59:         case 3:
  1840                           
  1841                           ;ADC.c: 58:             break;
  1842                           
  1843                           
  1844                           ;ADC.c: 60:             TRISAbits.TRISA3 = 1;
  1845  008E  1683               	bsf	3,5	;RP0=1, select bank1
  1846  008F  1303               	bcf	3,6	;RP1=0, select bank1
  1847  0090  1585               	bsf	5,3	;volatile
  1848                           
  1849                           ;ADC.c: 61:             ANSELbits.ANS3 = 1;
  1850  0091  1683               	bsf	3,5	;RP0=1, select bank3
  1851  0092  1703               	bsf	3,6	;RP1=1, select bank3
  1852  0093  1588               	bsf	8,3	;volatile
  1853  0094  289B               	goto	L16
  1854  0095                     l157:	
  1855                           ;ADC.c: 64:         case 4:
  1856                           
  1857                           ;ADC.c: 63:             break;
  1858                           
  1859                           ;ADC.c: 62:             ADCON0bits.CHS = 3;
  1860                           
  1861                           
  1862                           ;ADC.c: 65:             TRISAbits.TRISA5 = 1;
  1863  0095  1683               	bsf	3,5	;RP0=1, select bank1
  1864  0096  1303               	bcf	3,6	;RP1=0, select bank1
  1865  0097  1685               	bsf	5,5	;volatile
  1866                           
  1867                           ;ADC.c: 66:             ANSELbits.ANS4 = 1;
  1868  0098  1683               	bsf	3,5	;RP0=1, select bank3
  1869  0099  1703               	bsf	3,6	;RP1=1, select bank3
  1870  009A  1608               	bsf	8,4	;volatile
  1871  009B                     L16:	
  1872                           
  1873                           ;ADC.c: 67:             ADCON0bits.CHS = 3;
  1874  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1875  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1876  009D  081F               	movf	31,w	;volatile
  1877  009E  39C3               	andlw	-61
  1878  009F  380C               	iorlw	12
  1879  00A0  28C4               	goto	L15
  1880  00A1                     l158:	
  1881                           ;ADC.c: 69:         case 5:
  1882                           
  1883                           ;ADC.c: 68:             break;
  1884                           
  1885                           
  1886                           ;ADC.c: 70:             TRISEbits.TRISE0 = 1;
  1887  00A1  1683               	bsf	3,5	;RP0=1, select bank1
  1888  00A2  1303               	bcf	3,6	;RP1=0, select bank1
  1889  00A3  1409               	bsf	9,0	;volatile
  1890                           
  1891                           ;ADC.c: 71:             ANSELbits.ANS5 = 1;
  1892  00A4  1683               	bsf	3,5	;RP0=1, select bank3
  1893  00A5  1703               	bsf	3,6	;RP1=1, select bank3
  1894  00A6  1688               	bsf	8,5	;volatile
  1895                           
  1896                           ;ADC.c: 72:             ADCON0bits.CHS = 5;
  1897  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1898  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1899  00A9  081F               	movf	31,w	;volatile
  1900  00AA  39C3               	andlw	-61
  1901  00AB  3814               	iorlw	20
  1902  00AC  28C4               	goto	L15
  1903  00AD                     l159:	
  1904                           ;ADC.c: 74:         case 6:
  1905                           
  1906                           ;ADC.c: 73:             break;
  1907                           
  1908                           
  1909                           ;ADC.c: 75:             TRISEbits.TRISE1 = 1;
  1910  00AD  1683               	bsf	3,5	;RP0=1, select bank1
  1911  00AE  1303               	bcf	3,6	;RP1=0, select bank1
  1912  00AF  1489               	bsf	9,1	;volatile
  1913                           
  1914                           ;ADC.c: 76:             ANSELbits.ANS6 = 1;
  1915  00B0  1683               	bsf	3,5	;RP0=1, select bank3
  1916  00B1  1703               	bsf	3,6	;RP1=1, select bank3
  1917  00B2  1708               	bsf	8,6	;volatile
  1918                           
  1919                           ;ADC.c: 77:             ADCON0bits.CHS = 6;
  1920  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1921  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1922  00B5  081F               	movf	31,w	;volatile
  1923  00B6  39C3               	andlw	-61
  1924  00B7  3818               	iorlw	24
  1925  00B8  28C4               	goto	L15
  1926  00B9                     l160:	
  1927                           ;ADC.c: 79:         case 7:
  1928                           
  1929                           ;ADC.c: 78:             break;
  1930                           
  1931                           
  1932                           ;ADC.c: 80:             TRISEbits.TRISE2 = 1;
  1933  00B9  1683               	bsf	3,5	;RP0=1, select bank1
  1934  00BA  1303               	bcf	3,6	;RP1=0, select bank1
  1935  00BB  1509               	bsf	9,2	;volatile
  1936                           
  1937                           ;ADC.c: 81:             ANSELbits.ANS7 = 1;
  1938  00BC  1683               	bsf	3,5	;RP0=1, select bank3
  1939  00BD  1703               	bsf	3,6	;RP1=1, select bank3
  1940  00BE  1788               	bsf	8,7	;volatile
  1941                           
  1942                           ;ADC.c: 82:             ADCON0bits.CHS = 7;
  1943  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1944  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1945  00C1  081F               	movf	31,w	;volatile
  1946  00C2  39C3               	andlw	-61
  1947  00C3  381C               	iorlw	28
  1948  00C4                     L15:	
  1949  00C4  009F               	movwf	31	;volatile
  1950                           
  1951                           ;ADC.c: 83:             break;
  1952  00C5  28EA               	goto	l153
  1953  00C6                     l1440:	
  1954  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1955  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1956  00C8  0831               	movf	ADConfig@canal,w
  1957  00C9  00B3               	movwf	??_ADConfig
  1958  00CA  01B4               	clrf	??_ADConfig+1
  1959                           
  1960                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1961                           ; Switch size 1, requested type "simple"
  1962                           ; Number of cases is 1, Range of values is 0 to 0
  1963                           ; switch strategies available:
  1964                           ; Name         Instructions Cycles
  1965                           ; simple_byte            4     3 (average)
  1966                           ; direct_byte           11     8 (fixed)
  1967                           ; jumptable            260     6 (fixed)
  1968                           ;	Chosen strategy is simple_byte
  1969  00CB  0834               	movf	??_ADConfig+1,w
  1970  00CC  3A00               	xorlw	0	; case 0
  1971  00CD  1903               	skipnz
  1972  00CE  28D0               	goto	l1876
  1973  00CF  28EA               	goto	l153
  1974  00D0                     l1876:	
  1975                           
  1976                           ; Switch size 1, requested type "simple"
  1977                           ; Number of cases is 8, Range of values is 0 to 7
  1978                           ; switch strategies available:
  1979                           ; Name         Instructions Cycles
  1980                           ; simple_byte           25    13 (average)
  1981                           ; direct_byte           32     8 (fixed)
  1982                           ; jumptable            260     6 (fixed)
  1983                           ;	Chosen strategy is simple_byte
  1984  00D0  0833               	movf	??_ADConfig,w
  1985  00D1  3A00               	xorlw	0	; case 0
  1986  00D2  1903               	skipnz
  1987  00D3  286B               	goto	l152
  1988  00D4  3A01               	xorlw	1	; case 1
  1989  00D5  1903               	skipnz
  1990  00D6  2876               	goto	l154
  1991  00D7  3A03               	xorlw	3	; case 2
  1992  00D8  1903               	skipnz
  1993  00D9  2882               	goto	l155
  1994  00DA  3A01               	xorlw	1	; case 3
  1995  00DB  1903               	skipnz
  1996  00DC  288E               	goto	l156
  1997  00DD  3A07               	xorlw	7	; case 4
  1998  00DE  1903               	skipnz
  1999  00DF  2895               	goto	l157
  2000  00E0  3A01               	xorlw	1	; case 5
  2001  00E1  1903               	skipnz
  2002  00E2  28A1               	goto	l158
  2003  00E3  3A03               	xorlw	3	; case 6
  2004  00E4  1903               	skipnz
  2005  00E5  28AD               	goto	l159
  2006  00E6  3A01               	xorlw	1	; case 7
  2007  00E7  1903               	skipnz
  2008  00E8  28B9               	goto	l160
  2009  00E9  28EA               	goto	l153
  2010  00EA                     l153:	
  2011                           
  2012                           ;ADC.c: 88:     ADCON0bits.ADON = 1;
  2013  00EA  141F               	bsf	31,0	;volatile
  2014                           
  2015                           ;ADC.c: 89:     PIR1bits.ADIF = 0;
  2016  00EB  130C               	bcf	12,6	;volatile
  2017                           
  2018                           ;ADC.c: 90:     PIE1bits.ADIE = 1;
  2019  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  2020  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  2021  00EE  170C               	bsf	12,6	;volatile
  2022                           
  2023                           ;ADC.c: 91:     INTCONbits.PEIE = 1;
  2024  00EF  170B               	bsf	11,6	;volatile
  2025                           
  2026                           ;ADC.c: 92:     _delay((unsigned long)((30)*(4000000/4000.0)));
  2027  00F0  3027               	movlw	39
  2028  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  2029  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  2030  00F3  00B4               	movwf	??_ADConfig+1
  2031  00F4  30F4               	movlw	244
  2032  00F5  00B3               	movwf	??_ADConfig
  2033  00F6                     u477:	
  2034  00F6  0BB3               	decfsz	??_ADConfig,f
  2035  00F7  28F6               	goto	u477
  2036  00F8  0BB4               	decfsz	??_ADConfig+1,f
  2037  00F9  28F6               	goto	u477
  2038  00FA  0000               	nop
  2039                           
  2040                           ;ADC.c: 93:     ADCON0bits.GO_nDONE = 1;
  2041  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  2042  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  2043  00FD  149F               	bsf	31,1	;volatile
  2044  00FE  0008               	return
  2045  00FF                     __end_of_ADConfig:	
  2046                           
  2047                           	psect	text7
  2048  02FC                     __ptext7:	
  2049 ;; *************** function _ADCinit *****************
  2050 ;; Defined at:
  2051 ;;		line 111 in file "ADC.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;		None
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;		None
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  1    wreg      void 
  2058 ;; Registers used:
  2059 ;;		wreg
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2065 ;;      Params:         0       0       0       0       0
  2066 ;;      Locals:         0       0       0       0       0
  2067 ;;      Temps:          0       2       0       0       0
  2068 ;;      Totals:         0       2       0       0       0
  2069 ;;Total ram usage:        2 bytes
  2070 ;; Hardware stack levels used:    1
  2071 ;; Hardware stack levels required when called:    2
  2072 ;; This function calls:
  2073 ;;		Nothing
  2074 ;; This function is called by:
  2075 ;;		_main
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           
  2080                           ;psect for function _ADCinit
  2081  02FC                     _ADCinit:	
  2082                           
  2083                           ;ADC.c: 112:     PIR1bits.ADIF = 0;
  2084                           
  2085                           ;incstack = 0
  2086                           ; Regs used in _ADCinit: [wreg]
  2087  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  2088  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  2089  02FE  130C               	bcf	12,6	;volatile
  2090                           
  2091                           ;ADC.c: 113:     PIE1bits.ADIE = 1;
  2092  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  2093  0300  1303               	bcf	3,6	;RP1=0, select bank1
  2094  0301  170C               	bsf	12,6	;volatile
  2095                           
  2096                           ;ADC.c: 114:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2097  0302  301A               	movlw	26
  2098  0303  1283               	bcf	3,5	;RP0=0, select bank0
  2099  0304  1303               	bcf	3,6	;RP1=0, select bank0
  2100  0305  00B2               	movwf	??_ADCinit+1
  2101  0306  30F7               	movlw	247
  2102  0307  00B1               	movwf	??_ADCinit
  2103  0308                     u487:	
  2104  0308  0BB1               	decfsz	??_ADCinit,f
  2105  0309  2B08               	goto	u487
  2106  030A  0BB2               	decfsz	??_ADCinit+1,f
  2107  030B  2B08               	goto	u487
  2108  030C  2B0D               	nop2
  2109                           
  2110                           ;ADC.c: 115:     ADCON0bits.GO_nDONE = 1;
  2111  030D  1283               	bcf	3,5	;RP0=0, select bank0
  2112  030E  1303               	bcf	3,6	;RP1=0, select bank0
  2113  030F  149F               	bsf	31,1	;volatile
  2114  0310  0008               	return
  2115  0311                     __end_of_ADCinit:	
  2116                           
  2117                           	psect	text8
  2118  01F9                     __ptext8:	
  2119 ;; *************** function _ISR *****************
  2120 ;; Defined at:
  2121 ;;		line 54 in file "main.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;		None
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;		None
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  1    wreg      void 
  2128 ;; Registers used:
  2129 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2135 ;;      Params:         0       0       0       0       0
  2136 ;;      Locals:         0       0       0       0       0
  2137 ;;      Temps:          5       0       0       0       0
  2138 ;;      Totals:         5       0       0       0       0
  2139 ;;Total ram usage:        5 bytes
  2140 ;; Hardware stack levels used:    1
  2141 ;; Hardware stack levels required when called:    1
  2142 ;; This function calls:
  2143 ;;		_cambioDisplay
  2144 ;; This function is called by:
  2145 ;;		Interrupt level 1
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           
  2150                           ;psect for function _ISR
  2151  01F9                     _ISR:	
  2152                           
  2153                           ;main.c: 56:     if (PIR1bits.ADIF && PIE1bits.ADIE){
  2154  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  2155  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  2156  01FB  1F0C               	btfss	12,6	;volatile
  2157  01FC  2A06               	goto	i1l79
  2158  01FD  1683               	bsf	3,5	;RP0=1, select bank1
  2159  01FE  1303               	bcf	3,6	;RP1=0, select bank1
  2160  01FF  1F0C               	btfss	12,6	;volatile
  2161  0200  2A06               	goto	i1l79
  2162                           
  2163                           ;main.c: 57:         PIE1bits.ADIE = 0;
  2164  0201  130C               	bcf	12,6	;volatile
  2165                           
  2166                           ;main.c: 58:         banderaADC = 1;
  2167  0202  1283               	bcf	3,5	;RP0=0, select bank0
  2168  0203  1303               	bcf	3,6	;RP1=0, select bank0
  2169  0204  01BB               	clrf	_banderaADC
  2170  0205  0ABB               	incf	_banderaADC,f
  2171  0206                     i1l79:	
  2172                           ;main.c: 59:     }
  2173                           
  2174                           
  2175                           ;main.c: 61:     if (INTCONbits.RBIF == 1 && INTCONbits.RBIE == 1){
  2176  0206  180B               	btfsc	11,0	;volatile
  2177  0207  1D8B               	btfss	11,3	;volatile
  2178  0208  2A10               	goto	i1l80
  2179                           
  2180                           ;main.c: 62:         INTCONbits.RBIF = 0;
  2181  0209  100B               	bcf	11,0	;volatile
  2182                           
  2183                           ;main.c: 63:         if (banderaBoton == 0){
  2184  020A  087D               	movf	_banderaBoton,w
  2185  020B  1D03               	btfss	3,2
  2186  020C  2A10               	goto	i1l80
  2187                           
  2188                           ;main.c: 64:             banderaBoton = 1;
  2189  020D  01FD               	clrf	_banderaBoton
  2190  020E  0AFD               	incf	_banderaBoton,f
  2191                           
  2192                           ;main.c: 65:             INTCONbits.RBIE = 0;
  2193  020F  118B               	bcf	11,3	;volatile
  2194  0210                     i1l80:	
  2195                           ;main.c: 67:     }
  2196                           
  2197                           
  2198                           ;main.c: 69:     if (INTCONbits.T0IF == 1 && INTCONbits.T0IE == 1){
  2199  0210  190B               	btfsc	11,2	;volatile
  2200  0211  1E8B               	btfss	11,5	;volatile
  2201  0212  2A24               	goto	i1l83
  2202                           
  2203                           ;main.c: 70:         banderaTMR0 = ~banderaTMR0;
  2204  0213  09FA               	comf	_banderaTMR0,f
  2205                           
  2206                           ;main.c: 71:         cambioDisplay(valorDisplay_Uni, valorDisplay_Dec, banderaTMR0);
  2207  0214  1283               	bcf	3,5	;RP0=0, select bank0
  2208  0215  083A               	movf	_valorDisplay_Dec,w
  2209  0216  00F5               	movwf	??_ISR
  2210  0217  0875               	movf	??_ISR,w
  2211  0218  00F0               	movwf	cambioDisplay@valDec
  2212  0219  087A               	movf	_banderaTMR0,w
  2213  021A  00F6               	movwf	??_ISR+1
  2214  021B  0876               	movf	??_ISR+1,w
  2215  021C  00F1               	movwf	cambioDisplay@bandera
  2216  021D  0839               	movf	_valorDisplay_Uni,w
  2217  021E  120A  118A  2291  120A  118A  	fcall	_cambioDisplay
  2218                           
  2219                           ;main.c: 72:         INTCONbits.T0IF = 0;
  2220  0223  110B               	bcf	11,2	;volatile
  2221  0224                     i1l83:	
  2222  0224  0879               	movf	??_ISR+4,w
  2223  0225  008A               	movwf	10
  2224  0226  0878               	movf	??_ISR+3,w
  2225  0227  0084               	movwf	4
  2226  0228  0E77               	swapf	(??_ISR+2)^(0+4294967168),w
  2227  0229  0083               	movwf	3
  2228  022A  0EFE               	swapf	126,f
  2229  022B  0E7E               	swapf	126,w
  2230  022C  0009               	retfie
  2231  022D                     __end_of_ISR:	
  2232                           
  2233                           	psect	intentry
  2234  0004                     __pintentry:	
  2235                           ;incstack = 0
  2236                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2237                           
  2238  0004                     interrupt_function:	
  2239  007E                     saved_w	set	btemp
  2240  0004  00FE               	movwf	btemp
  2241  0005  0E03               	swapf	3,w
  2242  0006  00F7               	movwf	??_ISR+2
  2243  0007  0804               	movf	4,w
  2244  0008  00F8               	movwf	??_ISR+3
  2245  0009  080A               	movf	10,w
  2246  000A  00F9               	movwf	??_ISR+4
  2247  000B  120A  118A  29F9   	ljmp	_ISR
  2248                           
  2249                           	psect	text9
  2250  0291                     __ptext9:	
  2251 ;; *************** function _cambioDisplay *****************
  2252 ;; Defined at:
  2253 ;;		line 68 in file "Display_7.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  valUni          1    wreg     unsigned char 
  2256 ;;  valDec          1    0[COMMON] unsigned char 
  2257 ;;  bandera         1    1[COMMON] unsigned char 
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;  valUni          1    4[COMMON] unsigned char 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  1    wreg      void 
  2262 ;; Registers used:
  2263 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2269 ;;      Params:         2       0       0       0       0
  2270 ;;      Locals:         1       0       0       0       0
  2271 ;;      Temps:          2       0       0       0       0
  2272 ;;      Totals:         5       0       0       0       0
  2273 ;;Total ram usage:        5 bytes
  2274 ;; Hardware stack levels used:    1
  2275 ;; This function calls:
  2276 ;;		Nothing
  2277 ;; This function is called by:
  2278 ;;		_ISR
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           
  2283                           ;psect for function _cambioDisplay
  2284  0291                     _cambioDisplay:	
  2285                           
  2286                           ;incstack = 0
  2287                           ; Regs used in _cambioDisplay: [wreg-fsr0h+status,2+status,0]
  2288                           ;cambioDisplay@valUni stored from wreg
  2289  0291  00F4               	movwf	cambioDisplay@valUni
  2290                           
  2291                           ;Display_7.c: 69:     TMR0 = valorTMR0;
  2292  0292  1283               	bcf	3,5	;RP0=0, select bank0
  2293  0293  1303               	bcf	3,6	;RP1=0, select bank0
  2294  0294  0830               	movf	_valorTMR0,w
  2295  0295  0081               	movwf	1	;volatile
  2296                           
  2297                           ;Display_7.c: 70:     switch (bandera){
  2298  0296  2AAC               	goto	i1l1320
  2299  0297                     i1l210:	
  2300                           ;Display_7.c: 71:         case 0:
  2301                           
  2302                           
  2303                           ;Display_7.c: 72:             PORTCbits.RC0 = 0;
  2304  0297  1007               	bcf	7,0	;volatile
  2305                           
  2306                           ;Display_7.c: 73:             PORTD = numerosDisplay[valUni];
  2307  0298  0874               	movf	cambioDisplay@valUni,w
  2308  0299  3E20               	addlw	(low (_numerosDisplay| 0))& (0+255)
  2309  029A  0084               	movwf	4
  2310  029B  1383               	bcf	3,7	;select IRP bank0
  2311  029C  0800               	movf	0,w
  2312  029D  0088               	movwf	8	;volatile
  2313                           
  2314                           ;Display_7.c: 74:             PORTCbits.RC2 = 1;
  2315  029E  1507               	bsf	7,2	;volatile
  2316                           
  2317                           ;Display_7.c: 75:             break;
  2318  029F  0008               	return
  2319  02A0                     i1l212:	
  2320                           ;Display_7.c: 76:         case 255:
  2321                           
  2322                           
  2323                           ;Display_7.c: 77:             PORTCbits.RC2 = 0;
  2324  02A0  1107               	bcf	7,2	;volatile
  2325                           
  2326                           ;Display_7.c: 78:             PORTD = numerosDisplay[valDec];
  2327  02A1  0870               	movf	cambioDisplay@valDec,w
  2328  02A2  3E20               	addlw	(low (_numerosDisplay| 0))& (0+255)
  2329  02A3  0084               	movwf	4
  2330  02A4  1383               	bcf	3,7	;select IRP bank0
  2331  02A5  0800               	movf	0,w
  2332  02A6  0088               	movwf	8	;volatile
  2333                           
  2334                           ;Display_7.c: 79:             PORTCbits.RC0 = 1;
  2335  02A7  1407               	bsf	7,0	;volatile
  2336                           
  2337                           ;Display_7.c: 80:             break;
  2338  02A8  0008               	return
  2339  02A9                     i1l1318:	
  2340                           
  2341                           ;Display_7.c: 82:             PORTD = PORTD;
  2342  02A9  0808               	movf	8,w	;volatile
  2343  02AA  0088               	movwf	8	;volatile
  2344                           
  2345                           ;Display_7.c: 83:     }
  2346  02AB  0008               	return
  2347  02AC                     i1l1320:	
  2348  02AC  0871               	movf	cambioDisplay@bandera,w
  2349  02AD  00F2               	movwf	??_cambioDisplay
  2350  02AE  01F3               	clrf	??_cambioDisplay+1
  2351                           
  2352                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2353                           ; Switch size 1, requested type "simple"
  2354                           ; Number of cases is 1, Range of values is 0 to 0
  2355                           ; switch strategies available:
  2356                           ; Name         Instructions Cycles
  2357                           ; simple_byte            4     3 (average)
  2358                           ; direct_byte           11     8 (fixed)
  2359                           ; jumptable            260     6 (fixed)
  2360                           ;	Chosen strategy is simple_byte
  2361  02AF  0873               	movf	??_cambioDisplay+1,w
  2362  02B0  3A00               	xorlw	0	; case 0
  2363  02B1  1903               	skipnz
  2364  02B2  2AB4               	goto	i1l1878
  2365  02B3  2AA9               	goto	i1l1318
  2366  02B4                     i1l1878:	
  2367                           
  2368                           ; Switch size 1, requested type "simple"
  2369                           ; Number of cases is 2, Range of values is 0 to 255
  2370                           ; switch strategies available:
  2371                           ; Name         Instructions Cycles
  2372                           ; simple_byte            7     4 (average)
  2373                           ; jumptable            260     6 (fixed)
  2374                           ;	Chosen strategy is simple_byte
  2375  02B4  0872               	movf	??_cambioDisplay,w
  2376  02B5  3A00               	xorlw	0	; case 0
  2377  02B6  1903               	skipnz
  2378  02B7  2A97               	goto	i1l210
  2379  02B8  3AFF               	xorlw	255	; case 255
  2380  02B9  1903               	skipnz
  2381  02BA  2AA0               	goto	i1l212
  2382  02BB  2AA9               	goto	i1l1318
  2383  02BC  0008               	return
  2384  02BD                     __end_of_cambioDisplay:	
  2385  007E                     btemp	set	126	;btemp
  2386  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80      8      28
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_cambioDisplay

Critical Paths under _main in BANK0

    _main->_ADConfig

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     453
                                              5 BANK0      3     3      0
                            _ADCinit
                           _ADConfig
                       _AnalogRead_8
                     _config2Display
                     _config_PUERTOS
                        _press_Bajar
                        _press_Subir
 ---------------------------------------------------------------------------------
 (1) _press_Subir                                          2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _press_Bajar                                          2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _config_PUERTOS                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config2Display                                       3     1      2      98
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _AnalogRead_8                                         4     4      0      48
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _ADConfig                                             5     3      2     218
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADCinit                                              2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  5     5      0     218
                                              5 COMMON     5     5      0
                      _cambioDisplay
 ---------------------------------------------------------------------------------
 (3) _cambioDisplay                                        5     3      2     218
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCinit
   _ADConfig
   _AnalogRead_8
   _config2Display
   _config_PUERTOS
   _press_Bajar
   _press_Subir

 _ISR (ROOT)
   _cambioDisplay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      1C       5       35.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2A      12        0.0%
ABS                  0      0      2A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Feb 02 21:45:33 2020

                       pc 0002               __CFG_CP$OFF 0000                        fsr 0004  
                     l150 0057                       l160 00B9                       l152 006B  
                     l153 00EA                       l154 0076                       l155 0082  
                     l147 0052                       l156 008E                       l157 0095  
                     l149 0053                       l158 00A1                       l159 00AD  
                     l197 018B                       u425 01DE              __CFG_CPD$OFF 0000  
                     _ISR 01F9                       u437 023D                       u447 0258  
                     u457 026F                       u467 028A                       u477 00F6  
                     u487 0308                       fsr0 0004                       indf 0000  
    cambioDisplay@bandera 0071           __end_of_ADCinit 0311              __CFG_LVP$OFF 0000  
                    ?_ISR 0070                      l1410 002F                      l1412 0030  
                    l1420 005B                      l1414 0034                      l1440 00C6  
                    l1416 0037                      l1408 002C                      l1360 0125  
                    l1352 010E                      l1418 003C                      l1362 012B  
                    l1354 0113                      l1372 014C                      l1364 0131  
                    l1356 0119                      l1532 027D                      l1508 024B  
                    l1358 011F                      l1374 0153                      l1472 02CC  
                    l1368 013D                      l1474 02DC                      l1466 02C1  
                    l1468 02C3                      l1572 01B8                      l1582 01D2  
                    l1586 01D6                      l1594 01EE                      l1860 0172  
                    l1870 02D4                      l1862 0177                      l1872 0044  
                    l1864 017C                      l1874 0063                      l1866 0181  
                    l1858 0167                      l1876 00D0                      l1868 0186  
                    _IOCB 0096                      i1l80 0210                      i1l83 0224  
             main@lectura 0038                      i1l79 0206                      _TMR0 0001  
                    _WPUB 0095              __CFG_WRT$OFF 0000                      _main 0197  
                    btemp 007E                      start 000E             __CFG_IESO$OFF 0000  
        __end_of_ADConfig 00FF                     ??_ISR 0075                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l210 0297  
                   i1l212 02A0                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089          _valorDisplay_Dec 003A  
        _valorDisplay_Uni 0039          ??_config2Display 0033            __CFG_FCMEN$OFF 0000  
          __CFG_BOREN$OFF 0000                     pclath 000A                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 0011  
            __end_of_main 01F9                 ??_ADCinit 0031                    ??_main 0036  
   __size_of_AnalogRead_8 0021                    _ADRESH 001E                    _ADRESL 009E  
                  _ANSELH 0189          ??_config_PUERTOS 0031              _banderaBoton 007D  
                  i1l1320 02AC                    i1l1318 02A9                    i1l1878 02B4  
          __CFG_PWRTE$OFF 0000              _AnalogRead_8 02BD              ?_press_Bajar 0070  
                  saved_w 007E              ?_press_Subir 0070                 ?_ADConfig 0031  
 __end_of__initialization 0024            __pcstackCOMMON 0070              __pidataBANK0 0311  
              _banderaADC 003B            _OPTION_REGbits 0081    __size_of_cambioDisplay 002C  
              ??_ADConfig 0033                __pbssBANK0 0039                __pmaintext 0197  
           ADConfig@canal 0031                __pintentry 0004                   _ADCinit 02FC  
         ADConfig@oscFreq 0035    AnalogRead_8@conversion 0034             _cambioDisplay 0291  
   config2Display@FreqOsc 0031                 _ANSELbits 0188                   __ptext1 022D  
                 __ptext2 025F                   __ptext3 02DE                   __ptext4 00FF  
                 __ptext5 02BD                   __ptext6 0028                   __ptext7 02FC  
                 __ptext8 01F9                   __ptext9 0291              __size_of_ISR 0034  
    __size_of_press_Bajar 0032      end_of_initialization 0024      __size_of_press_Subir 0032  
          ?_cambioDisplay 0070                 _PORTBbits 0006                 _PORTCbits 0007  
               _PORTEbits 0009                 _TRISAbits 0085                 _TRISCbits 0087  
               _TRISEbits 0089         __size_of_ADConfig 00D7   __size_of_config2Display 0098  
     cambioDisplay@valDec 0070       cambioDisplay@valUni 0074       start_initialization 0011  
             __end_of_ISR 022D           ??_cambioDisplay 0072               _banderaTMR0 007A  
__CFG_FOSC$INTRC_NOCLKOUT 0000   __size_of_config_PUERTOS 001E                init_fetch0 0322  
             __pdataBANK0 0020                  ?_ADCinit 0070               __pbssCOMMON 007A  
               ___latbits 0002             __pcstackBANK0 0031                 _banderaDO 007B  
               _banderaUP 007C                  _ADConfig 0028         interrupt_function 0004  
          _config2Display 00FF                  _PIE1bits 008C                  _PIR1bits 000C  
               _valorTMR0 0030             ?_AnalogRead_8 0070                _ADCON0bits 001F  
              _ADCON1bits 009F       ADConfig@justificado 0032          __size_of_ADCinit 0015  
           ??_press_Bajar 0031             ??_press_Subir 0031    __end_of_config2Display 0197  
          _config_PUERTOS 02DE            ??_AnalogRead_8 0031            _numerosDisplay 0020  
       __CFG_BOR4V$BOR40V 0000       __end_of_press_Bajar 0291           ?_config2Display 0031  
     __end_of_press_Subir 025F             __size_of_main 0062    __end_of_config_PUERTOS 02FC  
              _INTCONbits 000B                  init_ram0 0326                  intlevel1 0000  
   __end_of_cambioDisplay 02BD           ?_config_PUERTOS 0070                _OSCCONbits 008F  
        AnalogRead_8@just 0033               _press_Bajar 025F               _press_Subir 022D  
    __end_of_AnalogRead_8 02DE  
