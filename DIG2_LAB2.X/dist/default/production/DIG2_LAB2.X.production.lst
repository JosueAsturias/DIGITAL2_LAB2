

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Feb 01 23:28:08 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.05
    16                           ; Generated 20/12/2018 GMT
    17                           ; 
    18                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0006                     _PORTBbits	set	6
   284  0008                     _PORTD	set	8
   285  0007                     _PORTC	set	7
   286  0006                     _PORTB	set	6
   287  0005                     _PORTA	set	5
   288  000B                     _INTCONbits	set	11
   289  0096                     _IOCB	set	150
   290  0081                     _OPTION_REGbits	set	129
   291  0095                     _WPUB	set	149
   292  0086                     _TRISB	set	134
   293  0085                     _TRISA	set	133
   294  0087                     _TRISC	set	135
   295  0088                     _TRISD	set	136
   296  0189                     _ANSELH	set	393
   297  0188                     _ANSEL	set	392
   298                           
   299                           ; #config settings
   300  0000                     
   301                           	psect	cinit
   302  000F                     start_initialization:	
   303  000F                     __initialization:	
   304                           
   305                           ; Clear objects allocated to COMMON
   306  000F  01F4               	clrf	__pbssCOMMON& (0+127)
   307  0010  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   308  0011  01F6               	clrf	(__pbssCOMMON+2)& (0+127)
   309  0012                     end_of_initialization:	
   310                           ;End of C runtime variable initialization code
   311                           
   312  0012                     __end_of__initialization:	
   313  0012  0183               	clrf	3
   314  0013  120A  118A  2888   	ljmp	_main	;jump to C main() function
   315                           
   316                           	psect	bssCOMMON
   317  0074                     __pbssCOMMON:	
   318  0074                     _banderaDO:	
   319  0074                     	ds	1
   320  0075                     _banderaUP:	
   321  0075                     	ds	1
   322  0076                     _banderaBoton:	
   323  0076                     	ds	1
   324                           
   325                           	psect	cstackCOMMON
   326  0070                     __pcstackCOMMON:	
   327  0070                     ?_config_PUERTOS:	
   328  0070                     ?_press_Subir:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ?_press_Bajar:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ?_ISR:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ??_ISR:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ?_main:	
   341                           ; 1 bytes @ 0x0
   342                           
   343                           
   344                           ; 1 bytes @ 0x0
   345  0070                     	ds	2
   346  0072                     ??_config_PUERTOS:	
   347  0072                     ??_press_Subir:	
   348                           ; 1 bytes @ 0x2
   349                           
   350  0072                     ??_press_Bajar:	
   351                           ; 1 bytes @ 0x2
   352                           
   353                           
   354                           ; 1 bytes @ 0x2
   355  0072                     	ds	2
   356  0074                     ??_main:	
   357                           
   358                           	psect	maintext
   359  0088                     __pmaintext:	
   360                           ; 1 bytes @ 0x4
   361 ;;
   362 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   363 ;;
   364 ;; *************** function _main *****************
   365 ;; Defined at:
   366 ;;		line 60 in file "main.c"
   367 ;; Parameters:    Size  Location     Type
   368 ;;		None
   369 ;; Auto vars:     Size  Location     Type
   370 ;;		None
   371 ;; Return value:  Size  Location     Type
   372 ;;                  1    wreg      void 
   373 ;; Registers used:
   374 ;;		wreg, status,2, status,0, pclath, cstack
   375 ;; Tracked objects:
   376 ;;		On entry : B00/0
   377 ;;		On exit  : 0/0
   378 ;;		Unchanged: 0/0
   379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   380 ;;      Params:         0       0       0       0       0
   381 ;;      Locals:         0       0       0       0       0
   382 ;;      Temps:          0       0       0       0       0
   383 ;;      Totals:         0       0       0       0       0
   384 ;;Total ram usage:        0 bytes
   385 ;; Hardware stack levels required when called:    2
   386 ;; This function calls:
   387 ;;		_config_PUERTOS
   388 ;;		_press_Bajar
   389 ;;		_press_Subir
   390 ;; This function is called by:
   391 ;;		Startup code after reset
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395                           
   396                           ;psect for function _main
   397  0088                     _main:	
   398                           
   399                           ;main.c: 61:     config_PUERTOS();
   400                           
   401                           ;incstack = 0
   402                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   403  0088  120A  118A  206E  120A  118A  	fcall	_config_PUERTOS
   404                           
   405                           ;main.c: 62:     INTCONbits.GIE = 1;
   406  008D  178B               	bsf	11,7	;volatile
   407                           
   408                           ;main.c: 63:     INTCONbits.RBIF = 0;
   409  008E  100B               	bcf	11,0	;volatile
   410  008F                     l56:	
   411                           ;main.c: 64:     while(1){
   412                           
   413                           
   414                           ;main.c: 65:         press_Subir();
   415  008F  120A  118A  2016  120A  118A  	fcall	_press_Subir
   416                           
   417                           ;main.c: 66:         press_Bajar();
   418  0094  120A  118A  2042  120A  118A  	fcall	_press_Bajar
   419  0099  288F               	goto	l56
   420  009A                     __end_of_main:	
   421                           
   422                           	psect	text1
   423  0016                     __ptext1:	
   424 ;; *************** function _press_Subir *****************
   425 ;; Defined at:
   426 ;;		line 91 in file "main.c"
   427 ;; Parameters:    Size  Location     Type
   428 ;;		None
   429 ;; Auto vars:     Size  Location     Type
   430 ;;		None
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      void 
   433 ;; Registers used:
   434 ;;		wreg, status,2, status,0
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   440 ;;      Params:         0       0       0       0       0
   441 ;;      Locals:         0       0       0       0       0
   442 ;;      Temps:          2       0       0       0       0
   443 ;;      Totals:         2       0       0       0       0
   444 ;;Total ram usage:        2 bytes
   445 ;; Hardware stack levels used:    1
   446 ;; Hardware stack levels required when called:    1
   447 ;; This function calls:
   448 ;;		Nothing
   449 ;; This function is called by:
   450 ;;		_main
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454                           
   455                           ;psect for function _press_Subir
   456  0016                     _press_Subir:	
   457                           
   458                           ;main.c: 92:     if (banderaBoton == 1){
   459                           
   460                           ;incstack = 0
   461                           ; Regs used in _press_Subir: [wreg+status,2+status,0]
   462  0016  0376               	decf	_banderaBoton,w
   463  0017  1D03               	btfss	3,2
   464  0018  2831               	goto	l712
   465                           
   466                           ;main.c: 93:         if (banderaUP == 0){
   467  0019  0875               	movf	_banderaUP,w
   468  001A  1D03               	btfss	3,2
   469  001B  2831               	goto	l712
   470                           
   471                           ;main.c: 94:             if (PORTBbits.RB0 == 0){
   472  001C  1283               	bcf	3,5	;RP0=0, select bank0
   473  001D  1303               	bcf	3,6	;RP1=0, select bank0
   474  001E  1806               	btfsc	6,0	;volatile
   475  001F  2831               	goto	l712
   476                           
   477                           ;main.c: 95:                 _delay((unsigned long)((69)*(4000000/4000.0)));
   478  0020  305A               	movlw	90
   479  0021  00F3               	movwf	??_press_Subir+1
   480  0022  309B               	movlw	155
   481  0023  00F2               	movwf	??_press_Subir
   482  0024                     u137:	
   483  0024  0BF2               	decfsz	??_press_Subir,f
   484  0025  2824               	goto	u137
   485  0026  0BF3               	decfsz	??_press_Subir+1,f
   486  0027  2824               	goto	u137
   487                           
   488                           ;main.c: 96:                 PORTA = PORTA + 1;
   489  0028  1283               	bcf	3,5	;RP0=0, select bank0
   490  0029  1303               	bcf	3,6	;RP1=0, select bank0
   491  002A  0805               	movf	5,w	;volatile
   492  002B  3E01               	addlw	1
   493  002C  0085               	movwf	5	;volatile
   494                           
   495                           ;main.c: 97:                 banderaBoton = 0;
   496  002D  01F6               	clrf	_banderaBoton
   497                           
   498                           ;main.c: 98:                 banderaUP = 1;
   499  002E  01F5               	clrf	_banderaUP
   500  002F  0AF5               	incf	_banderaUP,f
   501                           
   502                           ;main.c: 99:                 INTCONbits.RBIE = 1;
   503  0030  158B               	bsf	11,3	;volatile
   504  0031                     l712:	
   505                           
   506                           ;main.c: 103:     if (banderaUP == 1){
   507  0031  0375               	decf	_banderaUP,w
   508  0032  1D03               	btfss	3,2
   509  0033  0008               	return
   510                           
   511                           ;main.c: 104:         if (PORTBbits.RB0 == 1){
   512  0034  1283               	bcf	3,5	;RP0=0, select bank0
   513  0035  1303               	bcf	3,6	;RP1=0, select bank0
   514  0036  1C06               	btfss	6,0	;volatile
   515  0037  0008               	return
   516                           
   517                           ;main.c: 105:         _delay((unsigned long)((69)*(4000000/4000.0)));
   518  0038  305A               	movlw	90
   519  0039  00F3               	movwf	??_press_Subir+1
   520  003A  309B               	movlw	155
   521  003B  00F2               	movwf	??_press_Subir
   522  003C                     u147:	
   523  003C  0BF2               	decfsz	??_press_Subir,f
   524  003D  283C               	goto	u147
   525  003E  0BF3               	decfsz	??_press_Subir+1,f
   526  003F  283C               	goto	u147
   527                           
   528                           ;main.c: 106:         banderaUP = 0;
   529  0040  01F5               	clrf	_banderaUP
   530  0041  0008               	return
   531  0042                     __end_of_press_Subir:	
   532                           
   533                           	psect	text2
   534  0042                     __ptext2:	
   535 ;; *************** function _press_Bajar *****************
   536 ;; Defined at:
   537 ;;		line 110 in file "main.c"
   538 ;; Parameters:    Size  Location     Type
   539 ;;		None
   540 ;; Auto vars:     Size  Location     Type
   541 ;;		None
   542 ;; Return value:  Size  Location     Type
   543 ;;                  1    wreg      void 
   544 ;; Registers used:
   545 ;;		wreg, status,2, status,0
   546 ;; Tracked objects:
   547 ;;		On entry : 0/0
   548 ;;		On exit  : 0/0
   549 ;;		Unchanged: 0/0
   550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   551 ;;      Params:         0       0       0       0       0
   552 ;;      Locals:         0       0       0       0       0
   553 ;;      Temps:          2       0       0       0       0
   554 ;;      Totals:         2       0       0       0       0
   555 ;;Total ram usage:        2 bytes
   556 ;; Hardware stack levels used:    1
   557 ;; Hardware stack levels required when called:    1
   558 ;; This function calls:
   559 ;;		Nothing
   560 ;; This function is called by:
   561 ;;		_main
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565                           
   566                           ;psect for function _press_Bajar
   567  0042                     _press_Bajar:	
   568                           
   569                           ;main.c: 111:     if (banderaBoton == 1){
   570                           
   571                           ;incstack = 0
   572                           ; Regs used in _press_Bajar: [wreg+status,2+status,0]
   573  0042  0376               	decf	_banderaBoton,w
   574  0043  1D03               	btfss	3,2
   575  0044  285D               	goto	l736
   576                           
   577                           ;main.c: 112:         if (banderaDO == 0){
   578  0045  0874               	movf	_banderaDO,w
   579  0046  1D03               	btfss	3,2
   580  0047  285D               	goto	l736
   581                           
   582                           ;main.c: 113:             if (PORTBbits.RB2 == 0){
   583  0048  1283               	bcf	3,5	;RP0=0, select bank0
   584  0049  1303               	bcf	3,6	;RP1=0, select bank0
   585  004A  1906               	btfsc	6,2	;volatile
   586  004B  285D               	goto	l736
   587                           
   588                           ;main.c: 114:                 _delay((unsigned long)((69)*(4000000/4000.0)));
   589  004C  305A               	movlw	90
   590  004D  00F3               	movwf	??_press_Bajar+1
   591  004E  309B               	movlw	155
   592  004F  00F2               	movwf	??_press_Bajar
   593  0050                     u157:	
   594  0050  0BF2               	decfsz	??_press_Bajar,f
   595  0051  2850               	goto	u157
   596  0052  0BF3               	decfsz	??_press_Bajar+1,f
   597  0053  2850               	goto	u157
   598                           
   599                           ;main.c: 115:                 PORTA = PORTA - 1;
   600  0054  1283               	bcf	3,5	;RP0=0, select bank0
   601  0055  1303               	bcf	3,6	;RP1=0, select bank0
   602  0056  0805               	movf	5,w	;volatile
   603  0057  3EFF               	addlw	255
   604  0058  0085               	movwf	5	;volatile
   605                           
   606                           ;main.c: 116:                 banderaBoton = 0;
   607  0059  01F6               	clrf	_banderaBoton
   608                           
   609                           ;main.c: 117:                 banderaDO = 1;
   610  005A  01F4               	clrf	_banderaDO
   611  005B  0AF4               	incf	_banderaDO,f
   612                           
   613                           ;main.c: 118:                 INTCONbits.RBIE = 1;
   614  005C  158B               	bsf	11,3	;volatile
   615  005D                     l736:	
   616                           
   617                           ;main.c: 122:     if (banderaDO == 1){
   618  005D  0374               	decf	_banderaDO,w
   619  005E  1D03               	btfss	3,2
   620  005F  0008               	return
   621                           
   622                           ;main.c: 123:         if (PORTBbits.RB2 == 1){
   623  0060  1283               	bcf	3,5	;RP0=0, select bank0
   624  0061  1303               	bcf	3,6	;RP1=0, select bank0
   625  0062  1D06               	btfss	6,2	;volatile
   626  0063  0008               	return
   627                           
   628                           ;main.c: 124:         _delay((unsigned long)((69)*(4000000/4000.0)));
   629  0064  305A               	movlw	90
   630  0065  00F3               	movwf	??_press_Bajar+1
   631  0066  309B               	movlw	155
   632  0067  00F2               	movwf	??_press_Bajar
   633  0068                     u167:	
   634  0068  0BF2               	decfsz	??_press_Bajar,f
   635  0069  2868               	goto	u167
   636  006A  0BF3               	decfsz	??_press_Bajar+1,f
   637  006B  2868               	goto	u167
   638                           
   639                           ;main.c: 125:         banderaDO = 0;
   640  006C  01F4               	clrf	_banderaDO
   641  006D  0008               	return
   642  006E                     __end_of_press_Bajar:	
   643                           
   644                           	psect	text3
   645  006E                     __ptext3:	
   646 ;; *************** function _config_PUERTOS *****************
   647 ;; Defined at:
   648 ;;		line 71 in file "main.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;		None
   651 ;; Auto vars:     Size  Location     Type
   652 ;;		None
   653 ;; Return value:  Size  Location     Type
   654 ;;                  1    wreg      void 
   655 ;; Registers used:
   656 ;;		wreg, status,2
   657 ;; Tracked objects:
   658 ;;		On entry : 0/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   662 ;;      Params:         0       0       0       0       0
   663 ;;      Locals:         0       0       0       0       0
   664 ;;      Temps:          0       0       0       0       0
   665 ;;      Totals:         0       0       0       0       0
   666 ;;Total ram usage:        0 bytes
   667 ;; Hardware stack levels used:    1
   668 ;; Hardware stack levels required when called:    1
   669 ;; This function calls:
   670 ;;		Nothing
   671 ;; This function is called by:
   672 ;;		_main
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           
   677                           ;psect for function _config_PUERTOS
   678  006E                     _config_PUERTOS:	
   679                           
   680                           ;main.c: 73:     TRISD = 0;
   681                           
   682                           ;incstack = 0
   683                           ; Regs used in _config_PUERTOS: [wreg+status,2]
   684  006E  1683               	bsf	3,5	;RP0=1, select bank1
   685  006F  1303               	bcf	3,6	;RP1=0, select bank1
   686  0070  0188               	clrf	8	;volatile
   687                           
   688                           ;main.c: 74:     TRISC = 0;
   689  0071  0187               	clrf	7	;volatile
   690                           
   691                           ;main.c: 75:     TRISA = 0;
   692  0072  0185               	clrf	5	;volatile
   693                           
   694                           ;main.c: 76:     TRISB = 0b00000101;
   695  0073  3005               	movlw	5
   696  0074  0086               	movwf	6	;volatile
   697                           
   698                           ;main.c: 77:     PORTA = 0;
   699  0075  1283               	bcf	3,5	;RP0=0, select bank0
   700  0076  1303               	bcf	3,6	;RP1=0, select bank0
   701  0077  0185               	clrf	5	;volatile
   702                           
   703                           ;main.c: 78:     PORTB = 0;
   704  0078  0186               	clrf	6	;volatile
   705                           
   706                           ;main.c: 79:     PORTC = 0;
   707  0079  0187               	clrf	7	;volatile
   708                           
   709                           ;main.c: 80:     PORTD = 0;
   710  007A  0188               	clrf	8	;volatile
   711                           
   712                           ;main.c: 81:     ANSEL = 0;
   713  007B  1683               	bsf	3,5	;RP0=1, select bank3
   714  007C  1703               	bsf	3,6	;RP1=1, select bank3
   715  007D  0188               	clrf	8	;volatile
   716                           
   717                           ;main.c: 82:     ANSELH = 0;
   718  007E  0189               	clrf	9	;volatile
   719                           
   720                           ;main.c: 83:     WPUB = 0b00000101;
   721  007F  3005               	movlw	5
   722  0080  1683               	bsf	3,5	;RP0=1, select bank1
   723  0081  1303               	bcf	3,6	;RP1=0, select bank1
   724  0082  0095               	movwf	21	;volatile
   725                           
   726                           ;main.c: 84:     OPTION_REGbits.nRBPU = 0;
   727  0083  1381               	bcf	1,7	;volatile
   728                           
   729                           ;main.c: 87:     IOCB = 0b00000101;;
   730  0084  3005               	movlw	5
   731  0085  0096               	movwf	22	;volatile
   732                           
   733                           ;main.c: 88:     INTCONbits.RBIE = 1;
   734  0086  158B               	bsf	11,3	;volatile
   735  0087  0008               	return
   736  0088                     __end_of_config_PUERTOS:	
   737                           
   738                           	psect	text4
   739  009A                     __ptext4:	
   740 ;; *************** function _ISR *****************
   741 ;; Defined at:
   742 ;;		line 45 in file "main.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;		None
   745 ;; Auto vars:     Size  Location     Type
   746 ;;		None
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      void 
   749 ;; Registers used:
   750 ;;		wreg, status,2, status,0
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   756 ;;      Params:         0       0       0       0       0
   757 ;;      Locals:         0       0       0       0       0
   758 ;;      Temps:          2       0       0       0       0
   759 ;;      Totals:         2       0       0       0       0
   760 ;;Total ram usage:        2 bytes
   761 ;; Hardware stack levels used:    1
   762 ;; This function calls:
   763 ;;		Nothing
   764 ;; This function is called by:
   765 ;;		Interrupt level 1
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           
   770                           ;psect for function _ISR
   771  009A                     _ISR:	
   772                           
   773                           ;main.c: 47:     if (INTCONbits.RBIF == 1){
   774  009A  1C0B               	btfss	11,0	;volatile
   775  009B  28A3               	goto	i1l51
   776                           
   777                           ;main.c: 48:         INTCONbits.RBIF = 0;
   778  009C  100B               	bcf	11,0	;volatile
   779                           
   780                           ;main.c: 49:         if (banderaBoton == 0){
   781  009D  0876               	movf	_banderaBoton,w
   782  009E  1D03               	btfss	3,2
   783  009F  28A3               	goto	i1l51
   784                           
   785                           ;main.c: 50:             banderaBoton = 1;
   786  00A0  01F6               	clrf	_banderaBoton
   787  00A1  0AF6               	incf	_banderaBoton,f
   788                           
   789                           ;main.c: 51:             INTCONbits.RBIE = 0;
   790  00A2  118B               	bcf	11,3	;volatile
   791  00A3                     i1l51:	
   792  00A3  0871               	movf	??_ISR+1,w
   793  00A4  008A               	movwf	10
   794  00A5  0E70               	swapf	??_ISR^(0+4294967168),w
   795  00A6  0083               	movwf	3
   796  00A7  0EFE               	swapf	126,f
   797  00A8  0E7E               	swapf	126,w
   798  00A9  0009               	retfie
   799  00AA                     __end_of_ISR:	
   800  007E                     btemp	set	126	;btemp
   801  007E                     wtemp0	set	126
   802                           
   803                           	psect	intentry
   804  0004                     __pintentry:	
   805                           ;incstack = 0
   806                           ; Regs used in _ISR: [wreg+status,2+status,0]
   807                           
   808  0004                     interrupt_function:	
   809  007E                     saved_w	set	btemp
   810  0004  00FE               	movwf	btemp
   811  0005  0E03               	swapf	3,w
   812  0006  00F0               	movwf	??_ISR
   813  0007  080A               	movf	10,w
   814  0008  00F1               	movwf	??_ISR+1
   815  0009  120A  118A  289A   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_press_Bajar
    _main->_press_Subir

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                     _config_PUERTOS
                        _press_Bajar
                        _press_Subir
 ---------------------------------------------------------------------------------
 (1) _press_Subir                                          2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _press_Bajar                                          2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _config_PUERTOS                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_PUERTOS
   _press_Bajar
   _press_Subir

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Feb 01 23:28:08 2020

             __CFG_CP$OFF 0000                        l56 008F                       l712 0031  
                     l736 005D                       u137 0024                       u147 003C  
                     u157 0050                       u167 0068              __CFG_CPD$OFF 0000  
                     _ISR 009A              __CFG_LVP$OFF 0000                      ?_ISR 0070  
                    _IOCB 0096                      i1l51 00A3                      _WPUB 0095  
            __CFG_WRT$OFF 0000                      _main 0088                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_ISR 0070  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088            __CFG_FCMEN$OFF 0000  
          __CFG_BOREN$OFF 0000                     pclath 000A                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_main 009A                    ??_main 0074                    _ANSELH 0189  
        ??_config_PUERTOS 0072              _banderaBoton 0076            __CFG_PWRTE$OFF 0000  
            ?_press_Bajar 0070                    saved_w 007E              ?_press_Subir 0070  
 __end_of__initialization 0012            __pcstackCOMMON 0070            _OPTION_REGbits 0081  
              __pmaintext 0088                __pintentry 0004                   __ptext1 0016  
                 __ptext2 0042                   __ptext3 006E                   __ptext4 009A  
            __size_of_ISR 0010      __size_of_press_Bajar 002C      end_of_initialization 0012  
    __size_of_press_Subir 002C                 _PORTBbits 0006       start_initialization 000F  
             __end_of_ISR 00AA  __CFG_FOSC$INTRC_NOCLKOUT 0000   __size_of_config_PUERTOS 001A  
             __pbssCOMMON 0074                 ___latbits 0002                 _banderaDO 0074  
               _banderaUP 0075         interrupt_function 0004             ??_press_Bajar 0072  
           ??_press_Subir 0072            _config_PUERTOS 006E         __CFG_BOR4V$BOR40V 0000  
     __end_of_press_Bajar 006E       __end_of_press_Subir 0042             __size_of_main 0012  
  __end_of_config_PUERTOS 0088                _INTCONbits 000B                  intlevel1 0000  
         ?_config_PUERTOS 0070               _press_Bajar 0042               _press_Subir 0016  
