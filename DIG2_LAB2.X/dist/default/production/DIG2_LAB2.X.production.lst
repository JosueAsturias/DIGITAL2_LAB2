

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jan 29 15:33:01 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.05
    14                           ; Generated 20/12/2018 GMT
    15                           ; 
    16                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008F                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0097                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009A                     	;# 
   183  009B                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  0105                     	;# 
   189  0107                     	;# 
   190  0108                     	;# 
   191  0109                     	;# 
   192  010C                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0185                     	;# 
   198  0187                     	;# 
   199  0188                     	;# 
   200  0189                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203                           
   204                           	psect	idataCOMMON
   205  0784                     __pidataCOMMON:	
   206                           
   207                           ;initializer for _digitos
   208  0784  343F               	retlw	63
   209  0785  3400               	retlw	0
   210  0786  3406               	retlw	6
   211  0787  3400               	retlw	0
   212  0788  345B               	retlw	91
   213  0789  3400               	retlw	0
   214  078A  344F               	retlw	79
   215  078B  3400               	retlw	0
   216  078C  3466               	retlw	102
   217  078D  3400               	retlw	0
   218  0006                     _PORTB	set	6
   219  0005                     _PORTA	set	5
   220  0007                     _PORTC	set	7
   221  0008                     _PORTD	set	8
   222  0081                     _OPTION_REGbits	set	129
   223  0095                     _WPUB	set	149
   224  0086                     _TRISB	set	134
   225  0085                     _TRISA	set	133
   226  0087                     _TRISC	set	135
   227  0088                     _TRISD	set	136
   228  0189                     _ANSELH	set	393
   229  0188                     _ANSEL	set	392
   230                           
   231                           ; #config settings
   232  0000                     
   233                           	psect	cinit
   234  07C2                     start_initialization:	
   235  07C2                     __initialization:	
   236                           
   237                           ; Initialize objects allocated to COMMON
   238  07C2  120A  118A  2784  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   239  07C7  00F0               	movwf	__pdataCOMMON& (0+127)
   240  07C8  120A  118A  2785  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   241  07CD  00F1               	movwf	(__pdataCOMMON+1)& (0+127)
   242  07CE  120A  118A  2786  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   243  07D3  00F2               	movwf	(__pdataCOMMON+2)& (0+127)
   244  07D4  120A  118A  2787  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   245  07D9  00F3               	movwf	(__pdataCOMMON+3)& (0+127)
   246  07DA  120A  118A  2788  120A  118A  	fcall	__pidataCOMMON+4	;fetch initializer
   247  07DF  00F4               	movwf	(__pdataCOMMON+4)& (0+127)
   248  07E0  120A  118A  2789  120A  118A  	fcall	__pidataCOMMON+5	;fetch initializer
   249  07E5  00F5               	movwf	(__pdataCOMMON+5)& (0+127)
   250  07E6  120A  118A  278A  120A  118A  	fcall	__pidataCOMMON+6	;fetch initializer
   251  07EB  00F6               	movwf	(__pdataCOMMON+6)& (0+127)
   252  07EC  120A  118A  278B  120A  118A  	fcall	__pidataCOMMON+7	;fetch initializer
   253  07F1  00F7               	movwf	(__pdataCOMMON+7)& (0+127)
   254  07F2  120A  118A  278C  120A  118A  	fcall	__pidataCOMMON+8	;fetch initializer
   255  07F7  00F8               	movwf	(__pdataCOMMON+8)& (0+127)
   256  07F8  120A  118A  278D   	fcall	__pidataCOMMON+9	;fetch initializer
   257  07FB  00F9               	movwf	(__pdataCOMMON+9)& (0+127)
   258  07FC                     end_of_initialization:	
   259                           ;End of C runtime variable initialization code
   260                           
   261  07FC                     __end_of__initialization:	
   262  07FC  0183               	clrf	3
   263  07FD  120A  118A  2F8E   	ljmp	_main	;jump to C main() function
   264                           
   265                           	psect	dataCOMMON
   266  0070                     __pdataCOMMON:	
   267  0070                     _digitos:	
   268  0070                     	ds	10
   269                           
   270                           	psect	inittext
   271  079A                     init_fetch0:	
   272                           ;	Called with low address in FSR and high address in W
   273                           
   274  079A  087E               	movf	126,w
   275  079B  008A               	movwf	10
   276  079C  087F               	movf	127,w
   277  079D  0082               	movwf	2
   278  079E                     init_ram0:	
   279                           ;Called with:
   280                           ;	high address of idata address in btemp 
   281                           ;	low address of idata address in btemp+1 
   282                           ;	low address of data in FSR
   283                           ;	high address + 1 of data in btemp-1
   284                           
   285  079E  279A  120A  118A   	fcall	init_fetch0
   286  07A1  0080               	movwf	0
   287  07A2  0A84               	incf	4,f
   288  07A3  0804               	movf	4,w
   289  07A4  067D               	xorwf	125,w
   290  07A5  1903               	btfsc	3,2
   291  07A6  3400               	retlw	0
   292  07A7  0AFF               	incf	127,f
   293  07A8  1903               	btfsc	3,2
   294  07A9  0AFE               	incf	126,f
   295  07AA  2F9E               	goto	init_ram0
   296                           
   297                           	psect	cstackCOMMON
   298  0000                     __pcstackCOMMON:	
   299  0000                     ?_config_PUERTOS:	
   300  0000                     ??_config_PUERTOS:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0000                     ?_main:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0000                     ??_main:	
   307                           ; 1 bytes @ 0x0
   308                           
   309                           
   310                           	psect	maintext
   311  078E                     __pmaintext:	
   312                           ; 1 bytes @ 0x0
   313 ;;
   314 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   315 ;;
   316 ;; *************** function _main *****************
   317 ;; Defined at:
   318 ;;		line 37 in file "main.c"
   319 ;; Parameters:    Size  Location     Type
   320 ;;		None
   321 ;; Auto vars:     Size  Location     Type
   322 ;;		None
   323 ;; Return value:  Size  Location     Type
   324 ;;                  1    wreg      void 
   325 ;; Registers used:
   326 ;;		wreg, status,2, status,0, pclath, cstack
   327 ;; Tracked objects:
   328 ;;		On entry : B00/0
   329 ;;		On exit  : 0/0
   330 ;;		Unchanged: 0/0
   331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   332 ;;      Params:         0       0       0       0       0
   333 ;;      Locals:         0       0       0       0       0
   334 ;;      Temps:          0       0       0       0       0
   335 ;;      Totals:         0       0       0       0       0
   336 ;;Total ram usage:        0 bytes
   337 ;; Hardware stack levels required when called:    1
   338 ;; This function calls:
   339 ;;		_config_PUERTOS
   340 ;; This function is called by:
   341 ;;		Startup code after reset
   342 ;; This function uses a non-reentrant model
   343 ;;
   344                           
   345                           
   346                           ;psect for function _main
   347  078E                     _main:	
   348                           
   349                           ;main.c: 38:     config_PUERTOS();
   350                           
   351                           ;incstack = 0
   352                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   353  078E  120A  118A  27AB   	fcall	_config_PUERTOS
   354                           
   355                           ;main.c: 39:     PORTD = digitos[3];
   356  0791  0876               	movf	_digitos+6,w
   357  0792  1283               	bcf	3,5	;RP0=0, select bank0
   358  0793  1303               	bcf	3,6	;RP1=0, select bank0
   359  0794  0088               	movwf	8	;volatile
   360                           
   361                           ;main.c: 40:     PORTC = 5;
   362  0795  3005               	movlw	5
   363  0796  0087               	movwf	7	;volatile
   364  0797  120A  118A  2800   	ljmp	start
   365  079A                     __end_of_main:	
   366                           
   367                           	psect	text1
   368  07AB                     __ptext1:	
   369 ;; *************** function _config_PUERTOS *****************
   370 ;; Defined at:
   371 ;;		line 44 in file "main.c"
   372 ;; Parameters:    Size  Location     Type
   373 ;;		None
   374 ;; Auto vars:     Size  Location     Type
   375 ;;		None
   376 ;; Return value:  Size  Location     Type
   377 ;;                  1    wreg      void 
   378 ;; Registers used:
   379 ;;		wreg, status,2
   380 ;; Tracked objects:
   381 ;;		On entry : 0/0
   382 ;;		On exit  : 0/0
   383 ;;		Unchanged: 0/0
   384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   385 ;;      Params:         0       0       0       0       0
   386 ;;      Locals:         0       0       0       0       0
   387 ;;      Temps:          0       0       0       0       0
   388 ;;      Totals:         0       0       0       0       0
   389 ;;Total ram usage:        0 bytes
   390 ;; Hardware stack levels used:    1
   391 ;; This function calls:
   392 ;;		Nothing
   393 ;; This function is called by:
   394 ;;		_main
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398                           
   399                           ;psect for function _config_PUERTOS
   400  07AB                     _config_PUERTOS:	
   401                           
   402                           ;main.c: 46:     TRISD = 0;
   403                           
   404                           ;incstack = 0
   405                           ; Regs used in _config_PUERTOS: [wreg+status,2]
   406  07AB  1683               	bsf	3,5	;RP0=1, select bank1
   407  07AC  1303               	bcf	3,6	;RP1=0, select bank1
   408  07AD  0188               	clrf	8	;volatile
   409                           
   410                           ;main.c: 47:     TRISC = 0;
   411  07AE  0187               	clrf	7	;volatile
   412                           
   413                           ;main.c: 48:     TRISA = 0;
   414  07AF  0185               	clrf	5	;volatile
   415                           
   416                           ;main.c: 49:     TRISB = 0b00000111;
   417  07B0  3007               	movlw	7
   418  07B1  0086               	movwf	6	;volatile
   419                           
   420                           ;main.c: 50:     PORTA = 0; PORTB = 0; PORTC = 0; PORTD = 0;
   421  07B2  1283               	bcf	3,5	;RP0=0, select bank0
   422  07B3  1303               	bcf	3,6	;RP1=0, select bank0
   423  07B4  0185               	clrf	5	;volatile
   424  07B5  0186               	clrf	6	;volatile
   425  07B6  0187               	clrf	7	;volatile
   426  07B7  0188               	clrf	8	;volatile
   427                           
   428                           ;main.c: 51:     ANSEL = 0;
   429  07B8  1683               	bsf	3,5	;RP0=1, select bank3
   430  07B9  1703               	bsf	3,6	;RP1=1, select bank3
   431  07BA  0188               	clrf	8	;volatile
   432                           
   433                           ;main.c: 52:     ANSELH = 0;
   434  07BB  0189               	clrf	9	;volatile
   435                           
   436                           ;main.c: 53:     WPUB = 0b00000101;
   437  07BC  3005               	movlw	5
   438  07BD  1683               	bsf	3,5	;RP0=1, select bank1
   439  07BE  1303               	bcf	3,6	;RP1=0, select bank1
   440  07BF  0095               	movwf	21	;volatile
   441                           
   442                           ;main.c: 54:     OPTION_REGbits.nRBPU = 0;
   443  07C0  1381               	bcf	1,7	;volatile
   444  07C1  0008               	return
   445  07C2                     __end_of_config_PUERTOS:	
   446  007E                     btemp	set	126	;btemp
   447  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      0      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                     _config_PUERTOS
 ---------------------------------------------------------------------------------
 (1) _config_PUERTOS                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_PUERTOS

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      0       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       A      12        0.0%
ABS                  0      0       A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jan 29 15:33:01 2020

                       pc 0002               __CFG_CP$OFF 0000                        fsr 0004  
            __CFG_CPD$OFF 0000                       indf 0000              __CFG_LVP$OFF 0000  
                    _WPUB 0095              __CFG_WRT$OFF 0000                      _main 078E  
                    btemp 007E                      start 0000             __CFG_IESO$OFF 0000  
                   ?_main 0000             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088            __CFG_FCMEN$OFF 0000  
          __CFG_BOREN$OFF 0000                     pclath 000A                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 07C2  
            __end_of_main 079A                    ??_main 0000                    _ANSELH 0189  
        ??_config_PUERTOS 0000            __CFG_PWRTE$OFF 0000              __pdataCOMMON 0070  
 __end_of__initialization 07FC            __pcstackCOMMON 0000            _OPTION_REGbits 0081  
              __pmaintext 078E                   _digitos 0070                   __ptext1 07AB  
    end_of_initialization 07FC             __pidataCOMMON 0784       start_initialization 07C2  
__CFG_FOSC$INTRC_NOCLKOUT 0000   __size_of_config_PUERTOS 0017                init_fetch0 079A  
               ___latbits 0002            _config_PUERTOS 07AB         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 000C    __end_of_config_PUERTOS 07C2                  init_ram0 079E  
         ?_config_PUERTOS 0000  
